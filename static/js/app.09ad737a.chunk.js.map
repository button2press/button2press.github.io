{"version":3,"sources":["src/Icons/AchievementIcon/TrophyWinnerSvg.tsx","src/components/ControlsBar/AchievementsButton.tsx","src/Icons/Common/MutedSvg.tsx","src/Icons/Common/UnmutedSvg.tsx","src/utils/events/SimpleEventsBus.ts","src/services/events.ts","src/services/Game/Achievements/Achievement.ts","src/services/Game/Achievements/AchievementsCollection.ts","src/services/EventsFactory.ts","src/services/Game/Achievements/Trackers/ButtonPressFailureTracker.ts","src/services/Game/Achievements/Trackers/ButtonPressTracker.ts","src/services/Game/Achievements.ts","src/services/Game/TimingManager.ts","src/services/Game/ButtonController.ts","src/services/Game/UserStats.ts","src/services/Sounds.ts","src/services/Game.ts","src/components/ControlsBar/ToggleSoundButton.tsx","src/components/ControlsBar.tsx","src/Icons/AchievementIcon/BlockSvg.tsx","src/Icons/AchievementIcon/ClickSvg.tsx","src/Icons/AchievementIcon/FingersBrokenSvg.tsx","src/Icons/AchievementIcon/HighFiveSvg.tsx","src/Icons/AchievementIcon/LearningSvg.tsx","src/Icons/AchievementIcon/LockedSvg.tsx","src/Icons/AchievementIcon/PressSvg.tsx","src/Icons/AchievementIcon/StrongSvg.tsx","src/Icons/AchievementIcon/SuperheroSvg.tsx","src/Icons/AchievementIcon/WaitingSvg.tsx","src/Icons/AchievementIcon/WrongTapSvg.tsx","src/scenes/Achievements/AchievementItem/AchievementIcon.tsx","src/scenes/Achievements/AchievementItem/AchievementTitle.tsx","src/scenes/Achievements/AchievementItem.tsx","src/scenes/Achievements/Header.tsx","src/scenes/Achievements.tsx","src/basic-components/BasicButton.tsx","src/basic-components/Buttons/GreenButton.tsx","src/basic-components/Buttons/RedButton.tsx","src/hooks/useIsomorphicLayoutEffect.tsx","src/hooks/useInterval.tsx","src/scenes/Play/CountDown.tsx","src/scenes/Play/DebugPanel/LockSvg.tsx","src/scenes/Play/DebugPanel/ResetSvg.tsx","src/scenes/Play/DebugPanel/UnlockSvg.tsx","src/scenes/Play/DebugPanel.tsx","src/scenes/Play/Score.tsx","src/scenes/Play.tsx","src/utils/clock/SystemClock.ts","src/utils/storage/DeviceStorage.ts","src/utils/storage/Encryption/Default.ts","src/utils/storage/Encryption/Transparent.ts","App.tsx","assets/sounds/button-press.mp3","assets/sounds/button-penalty.mp3","assets/fonts/NotoSans/NotoSans-ExtraLight.ttf","assets/fonts/NotoSans/NotoSans-Light.ttf","assets/fonts/NotoSans/NotoSans-Medium.ttf"],"names":["TrophyWinnerSvg","fill","width","height","viewBox","points","d","AchievementsButton","onPress","Pressable","MutedSvg","UnmutedSvg","SimpleEventsBus","this","subscriptions","event","callback","id","Date","now","Math","random","key","name","__instance","ACHIEVEMENT_EVENTS","USER_EVENTS","STAT_EVENTS","Achievement","title","_unlockTs","_hidden","_description","_payload","description","ts","hidden","payload","AchievementsCollection","_list","json","data","JSON","parse","item","push","withDescription","setHidden","stringify","map","unlockTs","result","unlockedAt","withPayload","achievement","unlock","EventsFactory","clock","_clock","value","ButtonPressFailureTracker","_events","subscribe","handleTotalPenaltiesIncrease","trigger","emit","achievementsTrackerTriggered","ButtonPressTracker","handleTotalTapsIncrease","Achievements","_storage","STORAGE_KEY_ACHIEVEMENTS","_collection","trackers","fromJSON","require","get","then","parsed","list","persist","set","filter","unlockAll","delete","TimingManager","counter","coolDownsInSeconds","index","length","penalty","floor","getCoolDown","ButtonController","CONFIG_STORAGE_KEY","timingManager","config","_config","resetButton","nextPressTimestamp","getPressTimeFrame","persistConfig","getNextPressTimeFrameEnd","getPenaltyTime","UserStats","storage","events","totalTaps","totalPenalties","totalTapsIncreased","totalPenaltiesIncreased","BUTTON_PRESS","BUTTON_PENALTY","Sounds","muted","_buttonPress","_buttonPenalty","press","Audio","Sound","createAsync","sound","setVolumeAsync","SOUND_BUTTON_PRESS","replayAsync","SOUND_BUTTON_PENALTY","Game","_controller","_achievements","_userStats","_sounds","_debug","controller","initFromConfig","wireUpEvents","sounds","init","tap","tapPenalty","triggered","ToggleSoundButton","useState","setMuted","unmute","mute","ControlsBar","showAchievements","View","style","position","bottom","left","right","paddingBottom","alignItems","justifyContent","flexDirection","marginRight","flex","BlockSvg","stroke","ClickSvg","fillRule","clipRule","FingersBrokenSvg","HighFiveSvg","LearningSvg","cx","cy","r","LockedSvg","PressSvg","StrongSvg","SuperheroSvg","WaitingSvg","WrongTapSvg","ACHIEVEMENTS_COLORS","AchievementIcon","isLocked","achievementId","getColorById","AchievementTitle","Text","color","fontFamily","fontSize","colorsConfig","locked","badgeBg","borderColor","titleColor","descriptionColor","unlocked","AchievementItem","colors","borderWidth","borderRadius","backgroundColor","padding","marginBottom","opacity","marginLeft","paddingTop","AchievementsHeader","achievements","onClose","top","zIndex","AchievementsScene","getAll","ScrollView","marginTop","showsVerticalScrollIndicator","BasicButtonComponent","text","shadowColor","textColor","shadowHeight","disabled","SHADOW_HEIGHT","marginHeight","useRef","Animated","Value","current","paddingHeight","containerPaddingLeft","containerPaddingRight","paddingRight","paddingLeft","play","sequence","timing","useNativeDriver","toValue","duration","start","parallel","selectable","GreenButton","RedButton","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","useInterval","delay","savedCallback","setInterval","clearInterval","padTo2Digits","toString","padStart","msToTimer","milliseconds","seconds","minutes","hours","CountDown","endTime","remainingTime","setRemainingTime","textAlign","LockSvg","ResetSvg","UnlockSvg","DebugPanel","reset","lockAll","GameScore","React","memo","score","PlayScene","buttonController","getCounter","setCounter","canRenderPenaltyAnimation","setCanRenderPenaltyAnimation","getNextPressTimeFrameStart","setDisabled","penaltyTimeOpacity","penaltyTimeAnimation","isButtonExpired","userTapPenalty","buttonPressedTooEarly","buttonPressedOnTime","userTap","fontWeight","debug","SystemClock","DeviceStorage","encrypt","hash","AsyncStorage","setItem","getKey","getItem","decrypt","removeItem","DefaultEncrypt","secret","a","substring","CryptoJS","AES","enc","Utf8","MD5","TransparentEncrypt","App","StatusBar","screen","Dimensions","ready","setReady","setShowAchievements","useFonts","PrimaryExtraLight","PrimaryLight","Primary","fontsLoaded","enableDebug","Platform","OS","catch","e","console","error","module","exports"],"mappings":"0oCAIaA,EAAiC,SAAH,GAAiC,IAA3BC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAC1D,OACI,eAAC,IAAG,CACAC,QAAQ,sBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,UAAO,CAACI,OAAO,iDAChB,cAAC,OAAI,CAACC,EAAE,+PACR,cAAC,OAAI,CAACA,EAAE,2mDCNPC,EAAiC,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAC7C,OACI,cAACC,EAAA,QAAS,CACND,QAAS,WACLA,KACF,SAEF,cAAC,EAAe,CAACN,MAAO,GAAIC,OAAQ,GAAIF,KAAM,eCX7CS,EAA0B,SAAH,GAAiC,IAA3BT,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACnD,OACI,eAAC,IAAG,CACAC,QAAQ,YACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,OAAI,CAACK,EAAE,gBAAgBL,KAAK,SAC7B,cAAC,OAAI,CAACK,EAAE,0QAA2Q,QCTlRK,EAA4B,SAAH,GAAiC,IAA3BV,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACrD,OACI,eAAC,IAAG,CACAC,QAAQ,YACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,OAAI,CAACK,EAAE,gBAAgBL,KAAK,SAC7B,cAAC,OAAI,CAACK,EAAE,4ZAA6Z,Q,gDCPpaM,EAAe,WAIxB,aAAe,YACXC,KAAKC,cAAgB,GAUxB,OATA,8BAWD,SAAiBC,EAAeC,GAE5B,IAAMC,EAAQC,KAAKC,MAAK,IAAIC,KAAKC,SAMjC,OALKR,KAAKC,cAAcC,KACpBF,KAAKC,cAAcC,GAAS,IAGhCF,KAAKC,cAAcC,GAAOE,GAAMD,EACzBC,IACV,yBAED,SAAmBA,GACf,IAAK,IAAMF,KAASF,KAAKC,cACjBD,KAAKC,cAAcC,GAAOE,WACnBJ,KAAKC,cAAcC,GAAOE,KAG5C,kBAED,SAAYF,GACR,IAAMO,EAAMP,EAAMQ,KAClB,GAAKV,KAAKC,cAAcQ,GAGxB,IAAK,IAAML,KAAMJ,KAAKC,cAAcQ,GAChCT,KAAKC,cAAcQ,GAAKL,GAAIF,KAEnC,kBAED,WACI,OAAOF,KAAKC,iBACf,uBAxCD,WACI,OAAIF,EAAgBY,aAIpBZ,EAAgBY,WAAa,IAAIZ,GAHtBA,EAAgBY,eAK9B,EAfuB,GCNfC,EACU,uCADVA,EAEC,8BAGDC,EACG,yBADHA,EAEW,iCAGXC,EACG,yBADHA,EAEY,kCAFZA,EAGQ,8BAHRA,EAIiB,uCCdjBC,EAAW,WAMpB,WAA4BX,EAA4BY,GAAgB,iBAA5CZ,KAAU,KAAkBY,QACpDhB,KAAKiB,WAAa,EAClBjB,KAAKkB,SAAU,EAwClB,OAvCA,8BAED,WACI,OAAOlB,KAAKmB,eACf,oBAED,WACI,OAAOnB,KAAKiB,YACf,kBAED,WACI,OAAOjB,KAAKkB,UACf,mBAED,WACI,OAAOlB,KAAKoB,WACf,sBAED,WACI,OAAOpB,KAAKiB,UAAY,IAC3B,6BAED,SAAuBI,GAEnB,OADArB,KAAKmB,aAAeE,EACbrB,OACV,wBAED,SAAkBsB,GAEd,OADAtB,KAAKiB,UAAYK,EACVtB,OACV,uBAED,SAAiBuB,GAEb,OADAvB,KAAKkB,QAAUK,EACRvB,OACV,yBAED,SAAmBwB,GACfxB,KAAKoB,SAAWI,MACnB,EAhDmB,GCEXC,EAAsB,WAE/B,aAAe,YACXzB,KAAK0B,MAAQ,GAuDhB,OAtDA,uBAED,WACI,OAAO1B,KAAK0B,QACf,sBAED,SAAgBC,GACZ3B,KAAK0B,MAAQ,GACb,IAAME,EAAYC,KAAKC,MAAMH,GAC7B,IAAK,IAAMI,KAAQH,EACf5B,KAAK0B,MAAMM,KACP,IAAIjB,EAAYgB,EAAK3B,GAAI2B,EAAKf,OACzBiB,gBAAgBF,EAAKV,aACrBa,YAAYH,EAAKR,SAG9B,OAAOvB,OACV,oBAED,WACI,OAAO6B,KAAKM,UACRnC,KAAK0B,MAAMU,KAAI,SAACL,GAAI,MAAM,CACtB3B,GAAI2B,EAAK3B,GACTY,MAAOe,EAAKf,MACZK,YAAaU,EAAKV,YAClBE,OAAQQ,EAAKR,cAGxB,oBAED,SAAOnB,EAAYiC,EAAkBb,GACjC,IAAIc,EAAS,KAgBb,OAfAtC,KAAK0B,MAAQ1B,KAAK0B,MAAMU,KAAI,SAACL,GACzB,OAAIA,EAAK3B,KAAOA,GAGZ2B,EAAKM,UAAY,IAIrBN,EAAKQ,WAAWF,GACZb,GACAO,EAAKS,YAAYhB,GAErBc,EAASP,GAVEA,KAaRO,IACV,uBAED,WACI,IAAK,IAAMG,KAAezC,KAAK0B,MAC3B1B,KAAK0C,OAAOD,EAAYrC,GAAI,OAEnC,EA1D8B,GCGtBuC,EAAa,oCAqErB,OArEqB,8BAGtB,SAAmBC,GACfD,EAAcE,OAASD,IAC1B,qBAED,SAAsBtB,GAClB,MAAO,CACHZ,KAAMG,EACNS,GAAIqB,EAAcE,OAAOvC,SAEhC,4BAED,SAA6BgB,GACzB,MAAO,CACHZ,KAAMG,EACNS,GAAIqB,EAAcE,OAAOvC,SAEhC,gCAED,SAAiCwC,GAC7B,MAAO,CACHpC,KAAMI,EACNQ,GAAIqB,EAAcE,OAAOvC,MACzBkB,QAAS,CAAEsB,YAElB,wCAED,SAAyCA,GACrC,MAAO,CACHpC,KAAMI,EACNQ,GAAIqB,EAAcE,OAAOvC,MACzBkB,QAAS,CAAEsB,YAElB,qCAED,SAAsCA,GAClC,MAAO,CACHpC,KAAMI,EACNQ,GAAIqB,EAAcE,OAAOvC,MACzBkB,QAAS,CAAEsB,YAElB,6CAED,SAA8CA,GAC1C,MAAO,CACHpC,KAAMI,EACNQ,GAAIqB,EAAcE,OAAOvC,MACzBkB,QAAS,CAAEsB,YAElB,0CAED,SACItB,GAEA,MAAO,CACHF,GAAIqB,EAAcE,OAAOvC,MACzBI,KAAME,EACNY,QAASA,KAEhB,iCAED,SAAkCA,GAC9B,MAAO,CACHF,GAAIqB,EAAcE,OAAOvC,MACzBI,KAAME,EACNY,QAASA,OAEhB,EArEqB,GCGbuB,EAAyB,WAClC,WAA6BC,GAA2B,IAAD,wBAA1BA,UACzBhD,KAAKgD,QAAQC,UACTnC,GACA,SAACZ,GACG,EAAKgD,6BAA6BhD,MAuB7C,OApBA,2BAED,WACI,MAAO,KACV,sBAED,SAASyB,MAAsB,0CAE/B,SAAqCzB,GAEjC,IAAK,IAAMiD,IADY,CAAC,EAAG,EAAG,GAAI,IAAK,KAE/BjD,EAAMsB,QAAQsB,QAAUK,GACxBnD,KAAKgD,QAAQI,KACTT,EAAcU,6BAA6B,CACvCjD,GAAG,WAAY+C,EACf3B,QAAS2B,SAK5B,EA5BiC,GCCzBG,EAAkB,WAC3B,WAA6BN,GAA2B,IAAD,wBAA1BA,UACzBhD,KAAKgD,QAAQC,UAAUnC,GAAwB,SAACZ,GAC5C,EAAKqD,wBAAwBrD,MAsBpC,OApBA,2BAED,WACI,MAAO,KACV,sBAED,SAASyB,MAAsB,qCAE/B,SAAgCzB,GAE5B,IAAK,IAAMiD,IADY,CAAC,EAAG,EAAG,GAAI,IAAK,KAE/BjD,EAAMsB,QAAQsB,QAAUK,GACxBnD,KAAKgD,QAAQI,KACTT,EAAcU,6BAA6B,CACvCjD,GAAG,SAAU+C,EACb3B,QAAS2B,SAK5B,EAzB0B,GCClBK,EAAY,WAKrB,WACqBX,EACAY,EACAT,GAClB,IAAD,wBAHmBH,SAAiB,KACjBY,WAAqB,KACrBT,UAAwB,KAP5BU,yBAA2B,wBAAwB,KAC5DC,YAAsC,IAAIlC,EAAyB,KACnEmC,SAAuB,GAO3B5D,KAAK4D,SAAW,CACZ,IAAIN,EAAmBtD,KAAKgD,SAC5B,IAAID,EAA0B/C,KAAKgD,UAGvChD,KAAK2D,YAAc3D,KAAK2D,YAAYE,SAChChC,KAAKM,UAAU2B,EAAQ,OAE3B9D,KAAKyD,SAASM,IAAI/D,KAAK0D,0BAA0BM,MAAK,SAAC1B,GACnD,GAAIA,EAAQ,CACR,IAAM2B,EAASpC,KAAKC,MAAMQ,GAC1B,aAAkC2B,EAAQ,CAAC,IAA9B7D,EAAE,EAAFA,GAAIkB,EAAE,EAAFA,GAAIE,EAAO,EAAPA,QACjB,EAAKmC,YAAYjB,OAAOtC,EAAIkB,EAAIE,QAqD/C,OAjDA,2BAED,WACI,OAAOxB,KAAK2D,YAAYO,OAC3B,sBAED,WACI,OAAO,IACV,uBAED,SAAiBhE,GACb,GAAIA,EAAMQ,OAASE,EAAnB,CAGA,IAAMY,EAAyBtB,EAAMsB,QACTxB,KAAK2D,YAAYjB,OACzClB,EAAQpB,GACRF,EAAMoB,GACNE,EAAQA,UAGRxB,KAAKmE,aAEZ,qBAED,WACInE,KAAKyD,SAASW,IACVpE,KAAK0D,yBACL7B,KAAKM,UACDnC,KAAK2D,YAAYO,KACZG,QAAO,SAACtC,GAAI,OAAKA,EAAKM,SAAW,KACjCD,KAAI,SAACL,GAAI,MAAM,CACZ3B,GAAI2B,EAAK3B,GACTkB,GAAIS,EAAKM,iBAI5B,uBAED,WACIrC,KAAK2D,YAAYW,YACjBtE,KAAKmE,YACR,qBAED,WACInE,KAAK2D,YAAc3D,KAAK2D,YAAYE,SAChChC,KAAKM,UAAU2B,EAAQ,OAE3B9D,KAAKyD,SAASc,OAAOvE,KAAK0D,8BAC7B,EA3EoB,GCVZc,EAAa,WACtB,aAAe,YAuCd,OAvCe,gCAEhB,SAAmBC,GACf,IAAMC,EAAqB,CACvB,EACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,MACA,MACA,OAEEC,EAAQF,EAAU,EAAIA,EAAU,EAAI,EAC1C,OAAIE,EAAQD,EAAmBE,OACQ,IAA5BF,EAAmBC,GAEvB,QACV,+BAED,WACI,OAAO,QACV,4BAED,SAAsBF,GAClB,IAAMI,EAAUtE,KAAKuE,MAAkC,IAA5B9E,KAAK+E,YAAYN,IAC5C,OAAII,EAAU,IACH,IAEJA,MACV,EAxCqB,GCKbG,EAAgB,WAKzB,WACqBnC,EACAY,GAClB,iBAFkBZ,SAAiB,KACjBY,WAAqB,KAJlCwB,mBAAqB,cAMzBjF,KAAKkF,cAAgB,IAAIV,EA+E5B,OA9EA,yDAED,YACI,IAAMW,QAAenF,KAAKyD,SAASM,IAAI/D,KAAKiF,oBACxCE,EACAnF,KAAKoF,QAAUvD,KAAKC,MAAMqD,GAG9BnF,KAAKqF,iBACR,kDATA,IASA,iDAED,kBACUrF,KAAKyD,SAASW,IAChBpE,KAAKiF,mBACLpD,KAAKM,UAAUnC,KAAKoF,aAE3B,kDAPA,IAOA,wCAED,WACI,OAAOpF,KAAKoF,QAAQE,qBACvB,sCAED,WACI,OACItF,KAAKoF,QAAQE,mBACbtF,KAAKkF,cAAcK,sBAE1B,iCAED,WACIvF,KAAKoF,QAAQX,UACbzE,KAAKoF,QAAQE,mBACTtF,KAAK6C,OAAOvC,MACZN,KAAKkF,cAAcH,YAAY/E,KAAKoF,QAAQX,SAEhDzE,KAAKwF,kBACR,6BAED,WACI,OAAwC,GAApCxF,KAAKoF,QAAQE,oBAGVtF,KAAK6C,OAAOvC,MAAQN,KAAKyF,6BACnC,yBAED,WACIzF,KAAKoF,QAAU,CACXX,QAAS,EACTa,oBAAqB,GAEzBtF,KAAKwF,kBACR,4BAED,WACI,OAAOxF,KAAKkF,cAAcQ,eAAe1F,KAAKoF,QAAQX,WACzD,mCAED,WACIzE,KAAKoF,QAAQE,mBACTtF,KAAKoF,QAAQE,mBAAqBtF,KAAK0F,iBAE3C1F,KAAKwF,kBACR,wBAED,WACI,OAAOxF,KAAKoF,QAAQX,UACvB,mCAED,WACI,OAAO,IACV,0BAED,WACI,OAAO,IACV,qBAED,WACI,OAAO,MACV,EAxFwB,GCAhBkB,EAAS,WAIlB,WACqB/C,EACAgD,EACAC,GAClB,iBAHkBjD,QAAgB,KAChBgD,UAAoB,KACpBC,SAAuB,KANpCC,UAAoB,EAAE,KACtBC,eAAyB,EAkBhC,OAZG,wBAEJ,SAAW7F,GACPF,KAAK8F,YACL9F,KAAK6F,OAAOzC,KAAKT,EAAcqD,mBAAmBhG,KAAK8F,cAC1D,wBAED,SAAkB5F,GACdF,KAAK+F,iBACL/F,KAAK6F,OAAOzC,KACRT,EAAcsD,wBAAwBjG,KAAK+F,qBAElD,EApBiB,G,SCFhBG,EAAepC,EAAQ,KACvBqC,EAAiBrC,EAAQ,KAElBsC,EAAM,WAOf,aAA6C,IAAzBC,EAAc,wDAAQ,iBAAtBA,QAAc,KAH1BC,aAA6B,KAAK,KAClCC,eAA+B,KAiDtC,OA/C6C,yBAE9C,WACIvG,KAAKqG,OAAQ,IAChB,oBAED,WACIrG,KAAKqG,OAAQ,IAChB,uBAED,WACI,OAAIrG,KAAKqG,MACE,KAEJrG,KAAKsG,eACf,yBAED,WACI,OAAItG,KAAKqG,MACE,KAEJrG,KAAKuG,iBACf,wCAED,YACI,IAAMC,QAAcC,QAAMC,MAAMC,YAAYT,GACtCrB,QAAgB4B,QAAMC,MAAMC,YAAYR,GAE9CnG,KAAKsG,aAAeE,EAAMI,MAE1B5G,KAAKuG,eAAiB1B,EAAQ+B,MAC9B5G,KAAKuG,eAAeM,eAAe,OACtC,kDAVA,IAUA,kBAED,SAAYD,GAAgB,IAAD,IACvB,IAAI5G,KAAKqG,MAIT,OAAQO,GACJ,KAAKR,EAAOU,mBAER,YADiB,OAAjB,EAAA9G,KAAKsG,eAAL,EAAmBS,eAEvB,KAAKX,EAAOY,qBAER,YADmB,OAAnB,EAAAhH,KAAKuG,iBAAL,EAAqBQ,oBAGhC,EAtDc,GAANX,EACKU,mBAAqB,qBAD1BV,EAEKY,qBAAuB,uBCClC,IAAMC,EAAI,oCAiFZ,OAjFY,6BAUb,WACI,OAAOA,EAAKpE,SACf,mBAED,WACI,OAAOoE,EAAKxD,WACf,sBAED,WACI,OAAOwD,EAAKC,cACf,wBAED,WACI,OAAOD,EAAKE,gBACf,iBAED,WACI,OAAOF,EAAKG,aACf,kBAED,WACI,OAAOH,EAAKjE,UACf,kBAED,WACI,OAAOiE,EAAKI,UACf,iBAED,WACI,OAAOJ,EAAKK,SACf,yBAED,WACIL,EAAKK,QAAS,IACjB,wCAED,UAAyB1B,EAAsBhD,GAC3CqE,EAAKpE,OAASD,EACdqE,EAAKxD,SAAWmC,EAEhBqB,EAAKjE,QAAU,IAAIjD,EAEnBkH,EAAKC,YAAc,IAAIlC,EAAiBpC,EAAOgD,SACzCqB,EAAKM,WAAWC,iBAEtBP,EAAKE,cAAgB,IAAI3D,EAAaZ,EAAOgD,EAAS5F,KAAKgD,SAC3DiE,EAAKG,WAAa,IAAIzB,EAAU/C,EAAOgD,EAAS5F,KAAKgD,SACrDiE,EAAKQ,eAELR,EAAKI,QAAU,IAAIjB,QACba,EAAKS,OAAOC,UACrB,qDAjBA,IAiBA,0BAED,WACIV,EAAKjE,QAAQC,UAAUpC,GAAwB,SAACX,GAC5C+G,EAAKG,WAAWQ,IAAI1H,MAGxB+G,EAAKjE,QAAQC,UACTpC,GACA,SAACX,GACG+G,EAAKG,WAAWS,WAAW3H,MAInC+G,EAAKjE,QAAQC,UACTrC,GACA,SAACV,GACG+G,EAAKE,cAAcW,UAAU5H,UAGxC,EAjFY,GAAJ+G,EACMK,QAAkB,ECJ9B,IAAMS,EAAwB,WACjC,IACA,EAA0BC,oBAAS,GAAM,WAAlC3B,EAAK,KAAE4B,EAAQ,KACtB,OACI,eAACrI,EAAA,QAAS,CACND,QAAS,WACD0G,EACAY,EAAKS,OAAOQ,SAEZjB,EAAKS,OAAOS,OAEhBF,GAAU5B,IACZ,UAEDA,GAAS,cAAC,EAAQ,CAAChH,MAbf,GAa4BC,OAb5B,GAa0CF,KAAK,aAClDiH,GAAS,cAAC,EAAU,CAAChH,MAdlB,GAc+BC,OAd/B,GAc6CF,KAAK,gBCZtDgJ,EAA0B,SAAH,GAA8B,IAAxBC,EAAgB,EAAhBA,iBACtC,OACI,eAACC,EAAA,QAAI,CACDC,MAAO,CACHC,SAAU,WACVC,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPC,cAAe,GACfC,WAAY,SACZC,eAAgB,SAChBC,cAAe,OACjB,UAEF,cAACT,EAAA,QAAI,CACDC,MAAO,CACHS,YAAa,GACbC,KAAM,EACNH,eAAgB,SAChBD,WAAY,UACd,SAEF,cAAC,EAAkB,CAAClJ,QAAS0I,MAEjC,cAACC,EAAA,QAAI,CAACC,MAAO,CAAES,YAAa,IAAK,SAC7B,cAAC,EAAiB,U,gBC9BrBE,EAA0B,SAAH,GAAiC,IAA3B9J,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACnD,OACI,eAAC,IAAG,CACAC,QAAQ,YACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAK,OAAM,UAEX,cAAC,OAAI,CACDK,EAAE,kLACF0J,OAAY,MAAJ/J,IAAQ,SAEpB,cAAC,OAAI,CAACK,EAAE,gCAAgC0J,OAAY,MAAJ/J,IAAQ,aCZvDgK,GAA0B,SAAH,GAAiC,IAA3BhK,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACnD,OACI,cAAC,IAAG,CACAC,QAAQ,cACRH,KAAU,MAAJA,IAAQ,OACdC,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAAI,SAEtB,cAAC,OAAI,CACD+J,SAAS,UACTC,SAAS,UACTlK,KAAU,MAAJA,IAAQ,OACdK,EAAE,omDCZL8J,GAAkC,SAAH,GAAiC,IAA3BnK,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAC3D,OACI,cAAC,IAAG,CACAC,QAAQ,sBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,SAEX,cAAC,OAAI,CAACK,EAAE,mqLCRP+J,GAA6B,SAAH,GAAiC,IAA3BpK,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACtD,OACI,eAAC,IAAG,CACAC,QAAQ,sBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,OAAI,CAACK,EAAE,wyBACR,cAAC,OAAI,CAACA,EAAE,+KACR,cAAC,OAAI,CAACA,EAAE,kLACR,cAAC,OAAI,CAACA,EAAE,qNACR,cAAC,OAAI,CAACA,EAAE,i4DACR,cAAC,OAAI,CAACA,EAAE,m6CACR,cAAC,OAAI,CAACA,EAAE,8QACR,cAAC,UAAO,CAACD,OAAO,iEAChB,cAAC,UAAO,CAACA,OAAO,gEAChB,cAAC,UAAO,CAACA,OAAO,qECjBfiK,GAA6B,SAAH,GAAiC,IAA3BrK,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACtD,OACI,eAAC,IAAG,CACAC,QAAQ,wBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,OAAI,CAACK,EAAE,8SACR,cAAC,OAAI,CAACA,EAAE,iKACR,cAAC,UAAO,CAACD,OAAO,gSAChB,cAAC,SAAM,CAACkK,GAAG,UAAUC,GAAG,OAAOC,EAAE,SACjC,cAAC,OAAI,CAACnK,EAAE,0wBACR,cAAC,OAAI,CAACA,EAAE,6YACR,cAAC,OAAI,CAACA,EAAE,0dCdPoK,GAA2B,SAAH,GAAiC,IAA3BzK,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACpD,OACI,eAAC,IAAG,CACAC,QAAQ,YACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAK,OAAM,UAEX,cAAC,OAAI,CACDK,EAAE,sVACFL,KAAU,MAAJA,IAAQ,SAElB,cAAC,OAAI,CACDK,EAAE,+fACFL,KAAU,MAAJA,IAAQ,aCdjB0K,GAA0B,SAAH,GAAiC,IAA3B1K,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACnD,OACI,eAAC,IAAG,CACAC,QAAQ,wBACRH,KAAU,MAAJA,IAAQ,OACdC,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAAI,UAEtB,cAAC,OAAI,CAACG,EAAE,gwCACR,cAAC,OAAI,CAACA,EAAE,kMACR,cAAC,OAAI,CAACA,EAAE,4vBACR,cAAC,OAAI,CAACA,EAAE,kmBCHPsK,GAA2B,SAAH,GAAiC,IAA3B3K,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACpD,OACI,eAAC,IAAG,CACAC,QAAQ,wBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,SAAM,CAACsK,GAAG,UAAUC,GAAG,UAAUC,EAAE,SACpC,cAAC,OAAI,CAACnK,EAAE,2zHCjBPuK,GAA8B,SAAH,GAAiC,IAA3B5K,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACvD,OACI,eAAC,IAAG,CACAC,QAAQ,kBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,OAAI,CAACK,EAAE,gOACR,cAAC,OAAI,CAACA,EAAE,gNACR,cAAC,OAAI,CAACA,EAAE,yNACR,cAAC,SAAM,CAACiK,GAAG,MAAMC,GAAG,SAASC,EAAE,SAC/B,cAAC,OAAI,CAACnK,EAAE,ixBCZPwK,GAA4B,SAAH,GAAiC,IAA3B7K,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACrD,OACI,eAAC,IAAG,CACAC,QAAQ,qBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAK,OAAM,UAEX,cAAC,OAAI,CACDK,EAAE,2LACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,mBACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,8VACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,8RACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,yNACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,6MACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,mBACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,IAEV,cAAC,OAAI,CACDK,EAAE,kNACFW,GAAG,WACH+I,OAAO,OACP/J,KAAK,SAET,cAAC,OAAI,CACDK,EAAE,mBACFW,GAAG,WACH+I,OAAO,OACP/J,KAAK,SAET,cAAC,OAAI,CACDK,EAAE,yNACFW,GAAG,WACH+I,OAAO,OACP/J,KAAMA,QClET8K,GAA6B,SAAH,GAAiC,IAA3B9K,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACtD,OACI,eAAC,IAAG,CACAC,QAAQ,wBACRF,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAClBF,KAAMA,EAAK,UAEX,cAAC,OAAI,CAACK,EAAE,wTACR,cAAC,OAAI,CAACA,EAAE,0sCACR,cAAC,OAAI,CAACA,EAAE,qZACR,cAAC,OAAI,CAACA,EAAE,6ZACR,cAAC,OAAI,CAACA,EAAE,wcCGd0K,GAAiD,CACnD,UAAW,UACX,UAAW,UACX,WAAY,UACZ,YAAa,UACb,YAAa,UAEb,YAAa,UACb,YAAa,UACb,aAAc,UACd,cAAe,UACf,cAAe,WAONC,GAA8B,SAAH,GAAyB,IAAnB3H,EAAW,EAAXA,YAGpC4H,EAAW5H,EAAYJ,SAAW,EAClCjD,EARW,SAACkL,GAA2B,IAAD,EAC5C,OAAyC,OAAzC,EAAOH,GAAoBG,IAAc,EAAI,OAOhCC,CAAa9H,EAAYrC,IACtC,GAAIiK,EACA,OAAO,cAAC,GAAS,CAAChL,MALR,GAKsBC,OAJrB,KAOf,OAAQmD,EAAYrC,IAChB,IAAK,UACD,OAAO,cAAC,GAAQ,CAACf,MAVX,GAUyBC,OATxB,GASwCF,KAAMA,IACzD,IAAK,UACD,OAAO,cAAC,GAAW,CAACC,MAZd,GAY4BC,OAX3B,GAW2CF,KAAMA,IAC5D,IAAK,WACD,OAAO,cAAC,GAAQ,CAACC,MAdX,GAcyBC,OAbxB,GAawCF,KAAMA,IACzD,IAAK,YACD,OAAO,cAAC,GAAS,CAACC,MAhBZ,GAgB0BC,OAfzB,GAeyCF,KAAMA,IAC1D,IAAK,YACD,OACI,cAAC,GAAgB,CAACC,MAnBhB,GAmB8BC,OAlB7B,GAkB6CF,KAAMA,IAG9D,IAAK,YACD,OAAO,cAAC,GAAW,CAACC,MAvBd,GAuB4BC,OAtB3B,GAsB2CF,KAAMA,IAC5D,IAAK,YACD,OAAO,cAAC,GAAU,CAACC,MAzBb,GAyB2BC,OAxB1B,GAwB0CF,KAAMA,IAC3D,IAAK,aACD,OAAO,cAAC,GAAW,CAACC,MA3Bd,GA2B4BC,OA1B3B,GA0B2CF,KAAMA,IAC5D,IAAK,cACD,OAAO,cAAC,GAAY,CAACC,MA7Bf,GA6B6BC,OA5B5B,GA4B4CF,KAAMA,IAGjE,OAAO,cAAC,EAAQ,CAACC,MAhCH,GAgCiBC,OA/BhB,GA+BgCF,KAAMA,KC3D5CoL,GAA+B,SAAH,GAAyB,IAAnB/H,EAAW,EAAXA,YACvCzB,EAAQyB,EAAYzB,MAIxB,OAHIyB,EAAYlB,QAAUkB,EAAY4H,aAClCrJ,EAAQ,OAGR,cAACyJ,EAAA,QAAI,CACDlC,MAAO,CACHmC,MAAOjI,EAAY4H,WAAa,UAAY,UAC5CM,WAAY,UACZC,SAAU,IACZ,SAED5J,KCZP6J,GAAe,CACjBC,OAAQ,CACJC,QAAS,4BACTC,YAAa,UACbC,WAAY,UACZC,iBAAkB,WAEtBC,SAAU,CACNJ,QAAS,UACTC,YAAa,UACbC,WAAY,UACZC,iBAAkB,YAIbE,GAA8B,SAAH,GAAyB,IAAnB3I,EAAW,EAAXA,YACpC4H,EAAW5H,EAAYJ,SAAW,EAClCgJ,EAAShB,EAAWQ,GAAaC,OAASD,GAAaM,SAC7D,OACI,eAAC7C,EAAA,QAAI,CACDC,MAAO,CACHyC,YAAaK,EAAOL,YACpBM,YAAa,EACbC,aAAc,GACdC,gBAAiBH,EAAON,QACxBhC,cAAe,MACf0C,QAAS,GACTC,aAAc,GACd7C,WAAY,aACZ8C,QAAStB,EAAW,GAAM,GAC5B,UAEF,cAAC/B,EAAA,QAAI,CACDC,MAAO,CACHiD,gBAAiB,OACjBR,YAAaK,EAAOL,YACpBM,YAAa,EACbC,aAAc,GACdE,QAAS,GACTE,QAAStB,EAAW,GAAM,GAC5B,SAEF,cAAC,GAAe,CAAC5H,YAAaA,MAGlC,eAAC6F,EAAA,QAAI,CACDC,MAAO,CACHqD,WAAY,GACZ3C,KAAM,GACR,UAEF,cAACX,EAAA,QAAI,CAACC,MAAO,CAAEsD,WAAYpJ,EAAY4H,WAAa,GAAK,GAAI,SACzD,cAAC,GAAgB,CAAC5H,YAAaA,OAEjC4H,GACE,cAACI,EAAA,QAAI,CACDlC,MAAO,CACHmC,MAAOW,EAAOH,iBACdP,WAAY,eACZC,SAAU,IACZ,SAEDnI,EAAYpB,qBClExByK,GAAiC,SAAH,GAAkB,EAAZC,aAA6B,IAAfC,EAAO,EAAPA,QAC3D,OACI,cAAC1D,EAAA,QAAI,CACDC,MAAO,CACHC,SAAU,WACVyD,IAAK,EACLvD,KAAM,EACNC,MAAO,EACPkD,WAAY,GACZjD,cAAe,GACf4C,gBAAiB,OACjBU,OAAQ,IACRrD,WAAY,UACd,SAEF,cAACjJ,EAAA,QAAS,CACND,QAAS,WACLqM,KACF,SAEF,cAACvB,EAAA,QAAI,yBClBR0B,GAAgC,SAAH,GAAqB,IAAfH,EAAO,EAAPA,QACtCD,EAAe9E,EAAK8E,aAAaK,SACvC,OACI,eAAC9D,EAAA,QAAI,CACDC,MAAO,CACHC,SAAU,WACVyD,IAAK,EACLxD,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP6C,gBAAiB,OACjBC,QAAS,IACX,UAEF,cAAC,GAAkB,CAACM,aAAcA,EAAcC,QAASA,IACzD,cAACK,EAAA,QAAU,CACP9D,MAAO,CAAE+D,UAAW,IACpBC,8BAA8B,EAAM,SAEnCR,EAAa3J,KAAI,SAACK,GAAW,OAC1B,cAAC,GAAe,CACZA,YAAaA,GACRA,EAAYrC,a,mmBCblC,IAAMoM,GAAmC,SAAH,GAStC,IARHC,EAAI,EAAJA,KACAjB,EAAe,EAAfA,gBACAkB,EAAW,EAAXA,YACAC,EAAS,EAATA,UACAhN,EAAO,EAAPA,QACAiN,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAjG,EAAK,EAALA,MAEMkG,EAA4B,MAAZF,IAAgB,EAGhCG,EAAeC,iBAAO,IAAIC,WAASC,MAAM,IAAIC,QAC7CC,EAAgBJ,iBAAO,IAAIC,WAASC,MAAMJ,IAAgBK,QAE1DE,EAAuBL,iBAAO,IAAIC,WAASC,MAAM,IAAIC,QACrDG,EAAwBN,iBAAO,IAAIC,WAASC,MAAM,IAAIC,QAc5D,OAEI,cAACF,GAAA,QAAS3E,KAAI,CACVC,MAAO,CACHQ,cAAe,MACfuD,UAAWS,EACXQ,aAAcD,EACdE,YAAaH,GACf,SAEF,cAACzN,EAAA,QAAS,CACND,QAAS,WACDiH,GACAK,EAAKS,OAAO+F,KAAK7G,GAGjBiG,EACAI,WAASS,SAAS,CACdT,WAASU,OAAON,EAAsB,CAClCO,iBAAiB,EACjBC,QAvBH,GAwBGC,SAvBK,KAyBTb,WAASU,OAAON,EAAsB,CAClCO,iBAAiB,EACjBC,QAAS,EACTC,SA5BK,KA8BTb,WAASU,OAAOL,EAAuB,CACnCM,iBAAiB,EACjBC,QAjCH,GAkCGC,SAjCK,KAmCTb,WAASU,OAAOL,EAAuB,CACnCM,iBAAiB,EACjBC,QAAS,EACTC,SAtCK,KAwCTb,WAASU,OAAON,EAAsB,CAClCO,iBAAiB,EACjBC,QA3CH,GA4CGC,SA3CK,KA6CTb,WAASU,OAAON,EAAsB,CAClCO,iBAAiB,EACjBC,QAAS,EACTC,SAhDK,OAkDVC,OAAM,WACLpO,OAIRsN,WAASe,SAAS,CACdf,WAASS,SAAS,CACdT,WAASU,OAAOP,EAAe,CAC3BQ,iBAAiB,EACjBC,QAAS,EACTC,SA9EL,KAgFCb,WAASU,OAAOP,EAAe,CAC3BQ,iBAAiB,EACjBC,QAASf,EACTgB,SAlFH,QAqFLb,WAASS,SAAS,CACdT,WAASU,OAAOZ,EAAc,CAC1Ba,iBAAiB,EACjBC,QAASf,EACTgB,SA1FL,KA4FCb,WAASU,OAAOZ,EAAc,CAC1Ba,iBAAiB,EACjBC,QAAS,EACTC,SA9FH,UAiGNC,OAAM,WACLpO,QAEN,SAGF,cAACsN,GAAA,QAAS3E,KAAI,CACVC,MAAO,CACHiD,gBAAiBkB,EACjBnB,aAlGC,GAmGD3C,cAAewE,GACjB,SAGF,cAAC9E,EAAA,QAAI,CACDC,MAAK,IACDiD,kBACAD,aA1GH,GA2GGzC,eAAgB,SAChBC,cAAe,OA3GvB,CACZwE,aAAc,GACdC,YAAa,GACb3B,WAAY,GACZjD,cAAe,KAyGG,SAEF,cAAC6B,EAAA,QAAI,CACDlC,MAAO,CACHmC,MAAOiC,EACP/B,SAAU,GACVD,WAAY,WAEhBsD,YAAY,EAAM,SAEjBxB,aCnJhByB,GAA0B,SAAH,GAM7B,IALHzB,EAAI,EAAJA,KACA9M,EAAO,EAAPA,QACAiN,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAjG,EAAK,EAALA,MAEA,OACI,cAAC,GAAoB,CACjB6F,KAAMA,EACNE,UAAU,OACVD,YAAY,UACZlB,gBAAgB,UAChBoB,aAAcA,EACdjN,QAASA,EACTkN,SAAUA,EACVjG,MAAOA,KChBNuH,GAAwB,SAAH,GAM3B,IALH1B,EAAI,EAAJA,KACA9M,EAAO,EAAPA,QACAiN,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAjG,EAAK,EAALA,MAEA,OACI,cAAC,GAAoB,CACjB6F,KAAMA,EACNE,UAAU,OACVD,YAAY,UACZlB,gBAAgB,UAChBoB,aAAcA,EACdjN,QAASA,EACTkN,SAAUA,EACVjG,MAAOA,KCtBJwH,GAFO,qBAAXC,OAAyBC,kBAAkBC,YCCzCC,GAAc,SAACrO,EAAsBsO,GAC9C,IAAMC,EAAgB1B,iBAAO7M,GAG7BiO,IAA0B,WACtBM,EAAcvB,QAAUhN,IACzB,CAACA,IAGJoO,qBAAU,WAGN,GAAKE,GAAmB,IAAVA,EAAd,CAIA,IAAMrO,EAAKuO,aAAY,kBAAMD,EAAcvB,YAAWsB,GAEtD,OAAO,kBAAMG,cAAcxO,OAC5B,CAACqO,KCfFI,GAAe,SAAC/L,GAClB,OAAOA,EAAMgM,WAAWC,SAAS,EAAG,MAGlCC,GAAY,SAACC,GACf,IAAIC,EAAU3O,KAAKuE,OAAOmK,EAAe,KAAQ,KAC7CE,EAAU5O,KAAKuE,MAAMoK,EAAU,IAC/BE,EAAQ7O,KAAKuE,MAAMqK,EAAU,IAMjC,OAJAD,GAAoB,GACpBC,GAAoB,GAGVN,GAFVO,GAAgB,IAEa,IAAIP,GAAaM,GAAQ,IAAIN,GACtDK,IAIKG,GAAwB,SAAH,GAA4B,IAAtBC,EAAO,EAAPA,QAAS5E,EAAK,EAALA,MAC7C,EAA0C1C,mBAASsH,EAAUjP,KAAKC,OAAM,WAAjEiP,EAAa,KAAEC,EAAgB,KAMtC,OAJAhB,IAAY,WACRgB,EAAiBF,EAAUjP,KAAKC,SACjC,KAGC,qCACKiP,GAAiB,GACd,cAAC9E,EAAA,QAAI,CAAClC,MAAO,CAAEkH,UAAW,SAAU7E,SAAU,IAAK,eAEtD2E,EAAgB,GACb,cAAC9E,EAAA,QAAI,CACDlC,MAAO,CACHkH,UAAW,SACX7E,SAAU,GACVF,QACAC,WAAY,WAEhBsD,YAAY,EAAM,SAEjBe,GAAUO,SC7ClBG,GAAyB,SAAH,GAAiC,IAA3BtQ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAClD,OACI,eAAC,IAAG,CACAC,QAAQ,YACRH,KAAU,MAAJA,IAAQ,OACdC,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAAI,UAEtB,cAAC,SAAM,CAACoK,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,cAAC,OAAI,CAACnK,EAAE,gGACR,cAAC,OAAI,CAACA,EAAE,yCACR,cAAC,OAAI,CAACA,EAAE,6GCXPkQ,GAA0B,SAAH,GAAiC,IAA3BvQ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACnD,OACI,eAAC,IAAG,CACAC,QAAQ,cACRH,KAAU,MAAJA,IAAQ,OACdC,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAAI,UAEtB,cAAC,OAAI,CAACG,EAAE,syBACR,cAAC,OAAI,CAACA,EAAE,6MCTPmQ,GAA2B,SAAH,GAAiC,IAA3BxQ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAM,EAANA,OACpD,OACI,eAAC,IAAG,CACAC,QAAQ,YACRH,KAAU,MAAJA,IAAQ,OACdC,MAAY,MAALA,IAAS,IAChBC,OAAc,MAANA,IAAU,IAAI,UAEtB,cAAC,SAAM,CAACoK,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAC1B,cAAC,OAAI,CAACnK,EAAE,gGACR,cAAC,OAAI,CAACA,EAAE,yCACR,cAAC,OAAI,CAACA,EAAE,wGCJPoQ,GAAyB,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACrC,OACI,eAACxH,EAAA,QAAI,CAACC,MAAO,CAAE+D,UAAW,GAAIvD,cAAe,OAAQ,UACjD,cAACT,EAAA,QAAI,CAACC,MAAO,CAAES,YAAa,IAAK,SAC7B,cAACpJ,EAAA,QAAS,CACND,QAAS,WACLmQ,KACF,SAEF,cAAC,GAAQ,CAACzQ,MAAO,GAAIC,OAAQ,SAGrC,cAACgJ,EAAA,QAAI,CAACC,MAAO,CAAES,YAAa,IAAK,SAC7B,cAACpJ,EAAA,QAAS,CACND,QAAS,WACLsH,EAAK8E,aAAazH,aACpB,SAEF,cAAC,GAAS,CAACjF,MAAO,GAAIC,OAAQ,SAItC,cAACgJ,EAAA,QAAI,UACD,cAAC1I,EAAA,QAAS,CACND,QAAS,WACLsH,EAAK8E,aAAagE,WACpB,SAEF,cAAC,GAAO,CAAC1Q,MAAO,GAAIC,OAAQ,aCTnC0Q,GAAYC,IAAMC,MAjBA,SAAH,GAAmB,IAAbC,EAAK,EAALA,MAC9B,OACI,cAAC7H,EAAA,QAAI,CAACC,MAAO,CAAEM,WAAY,UAAW,SAClC,cAAC4B,EAAA,QAAI,CACDwD,YAAY,EACZ1F,MAAO,CACHmC,MAAO,iBACPC,WAAY,eACZC,SAAU,IACZ,SAEDuF,SCXJC,GAAgB,WACzB,IAAMC,EAAmBpJ,EAAKM,WAC9B,EAA8BS,mBAASqI,EAAiBC,cAAa,WAA9D7L,EAAO,KAAE8L,EAAU,KAC1B,EACIvI,oBAAS,GAAK,WADXwI,EAAyB,KAAEC,EAA4B,KAE9D,EAAgCzI,mBAC5Bf,EAAKrE,MAAMtC,OAAS+P,EAAiBK,8BACxC,WAFM7D,EAAQ,KAAE8D,EAAW,KAItBC,EAAqB5D,iBAAO,IAAIC,WAASC,MAAM,IAAIC,QACnD0D,EAAuB5D,WAASS,SAAS,CAC3CT,WAASU,OAAOiD,EAAoB,CAChChD,iBAAiB,EACjBC,QAAS,EACTC,SAAU,KAEdb,WAASU,OAAOiD,EAAoB,CAChChD,iBAAiB,EACjBC,QAAS,EACTC,SAAU,QAsClB,OAVAU,IAAY,WACJ6B,EAAiBS,oBACjBT,EAAiBhL,cACjBkL,EAAWF,EAAiBC,eAEhCK,EACI1J,EAAKrE,MAAMtC,OAAS+P,EAAiBK,gCAE1C,KAGC,cAACpI,EAAA,QAAI,UACD,eAACA,EAAA,QAAI,CAACC,MAAO,CAAEM,WAAY,UAAW,UAClC,cAACmH,GAAS,CAACG,MAAO1L,IAEjBoI,GACG,cAAC,GAAS,CACNJ,KAAI,eACJ9M,QAnCG,WACnBsH,EAAKpB,OAAOzC,KAAKT,EAAcoO,eAAe9J,EAAKrE,MAAMtC,QACzD+P,EAAiBW,wBACbR,IACAC,GAA6B,GAC7BI,EAAqB9C,OAAM,WACvB0C,GAA6B,QA8BrB7D,aAAc,GACdC,SAAUA,EACVjG,MAAOR,EAAOY,wBAGpB6F,GACE,cAAC,GAAW,CACRJ,KAAI,WACJ9M,QAnDA,WAChB0Q,EAAiBY,sBACjBV,EAAWF,EAAiBC,cAC5BK,GAAY,GACZ1J,EAAKpB,OAAOzC,KAAKT,EAAcuO,QAAQjK,EAAKrE,MAAMtC,SAgDlCsM,aAAc,GACdC,SAAUA,EACVjG,MAAOR,EAAOU,qBAGrB+F,GACG,eAACvE,EAAA,QAAI,CAACC,MAAO,CAAEsD,WAAY,IAAK,UAC5B,cAAC,GAAS,CACNnB,MAAM,UACN4E,QAASe,EAAiBK,+BAE9B,cAACzD,GAAA,QAAS3E,KAAI,CACVC,MAAO,CACHC,SAAU,WACVG,OAAQ,GACRsD,IAAK,GACLN,QAASiF,GACX,SAEF,eAACnG,EAAA,QAAI,CACDlC,MAAO,CAAEmC,MAAO,UAAWyG,WAAY,QAAS,cAG/C5Q,KAAKuE,MACFmC,EAAKM,WAAW7B,iBAAmB,cAOrDmH,GACE,cAACvE,EAAA,QAAI,CAACC,MAAO,CAAEsD,WAAY,IAAK,SAC5B,cAAC,GAAS,CACNnB,MAAM,UACN4E,QAASe,EAAiB5K,+BAKrCwB,EAAKmK,OAAS,cAAC,GAAU,CAACtB,MA1EzB,WACVO,EAAiBhL,cACjBkL,EAAWF,EAAiBC,cAC5BK,GAAY,YCvDPU,GAAW,oCAGnB,OAHmB,wBACpB,WACI,OAAOhR,KAAKC,UACf,EAHmB,G,UCEXgR,GAAa,WACtB,WAA6BC,GAAoB,iBAApBA,UAwB5B,OAxBiD,2BAElD,SAAe9Q,GACX,OAAOT,KAAKuR,QAAQC,KAAK/Q,KAC5B,uCAED,UAAUA,EAAasB,SACb0P,WAAaC,QACf1R,KAAK2R,OAAOlR,GACZT,KAAKuR,QAAQA,QAAQxP,OAE5B,qDAPA,IAOA,uCACD,UAAUtB,GACN,IAAMqC,QAAc2O,WAAaG,QAAQ5R,KAAK2R,OAAOlR,IACrD,OAAKqC,EAIa9C,KAAKuR,QAAQM,QAAQ/O,GAH5B,QAKd,mDATA,IASA,0CAED,UAAarC,SACHgR,WAAaK,WAAW9R,KAAK2R,OAAOlR,OAC7C,mDAJA,MAIA,EAzBqB,G,oBCDbsR,GAAc,WAGvB,aAAe,iBAFPC,OAAiB,GAGrB,IAAMC,EACF,yEACJjS,KAAKgS,OACDC,EAAEC,UAAU,GAAI,IAChBD,EAAEC,UAAU,EAAG,IACfD,EAAEC,UAAU,GAAI,IAChBD,EAAEC,UAAU,GAAI,IAChBD,EAAEC,UAAU,GAAI,IAcvB,OAbA,4BAED,SAAQtQ,GACJ,OAAOuQ,KAASC,IAAIb,QAAQ3P,EAAM5B,KAAKgS,QAAQlD,aAElD,qBACD,SAAQlN,GACJ,OAAOuQ,KAASC,IAAIP,QAAQjQ,EAAM5B,KAAKgS,QAAQlD,SAC3CqD,KAASE,IAAIC,QAEpB,kBACD,SAAK1Q,GACD,OAAOuQ,KAASI,IAAO3Q,EAAI,IAAI5B,KAAKgS,QAAUlD,eACjD,EAzBsB,GCDd0D,GAAkB,oCAS1B,OAT0B,4BAC3B,SAAQ5Q,GACJ,OAAOA,IACV,qBACD,SAAQA,GACJ,OAAOA,IACV,kBACD,SAAKA,GACD,OAAOA,MACV,EAT0B,GCahB,SAAS6Q,KACpBC,UAAUxQ,WAAU,GACpB,IAAMyQ,EAASC,UAAW7O,IAAI,UAC9B,EAA0BiE,oBAAS,GAAM,WAAlC6K,EAAK,KAAEC,EAAQ,KACtB,EAAgD9K,oBAAS,GAAM,WAAxDK,EAAgB,KAAE0K,EAAmB,KAC5C,EAAsBC,mBAAS,CAC3BC,kBAAmBnP,EAAQ,KAC3BoP,aAAcpP,EAAQ,KACtBqP,QAASrP,EAAQ,OAHdsP,EAIL,SAJgB,GA6BlB,OAvBA7E,qBAAU,WACN,IAAI+C,GAAc,IAAIkB,IACjBzO,IAAI,SACJC,MAAK,SAAClB,GACW,MAAVA,GACAmE,EAAKoM,iBAIjB,IAAMzQ,EAAQ,IAAIyO,GACdzL,EAAuB,IAAI0L,GAAc,IAAIkB,IAC7B,QAAhBc,UAASC,KACT3N,EAAU,IAAI0L,GAAc,IAAIS,KAGpCpP,EAAcgF,KAAK/E,GACnBqE,EAAKU,KAAK/B,EAAShD,GACdoB,MAAK,WACF8O,GAAS,MAEZU,OAAM,SAACC,GAAC,OAAKC,QAAQC,MAAM,4BAA6BF,QAC9D,IAGC,cAACnL,EAAA,QAAI,CACDC,MAAO,CACHjJ,OAAQqT,EAAOrT,OACfD,MAAOsT,EAAOtT,MACdwM,WAAY,KACd,SAEDgH,GAASO,GACN,qCACI,cAAC,GAAS,IACV,cAAC,EAAW,CACR/K,iBAAkB,WACd0K,GAAoB,MAG3B1K,GACG,cAAC,GAAiB,CACd2D,QAAS,WACL+G,GAAoB,a,0DCpEpDa,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,wCCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,8B,oBCA3CD,EAAOC,QAAU,IAA0B,gC","file":"static/js/app.09ad737a.chunk.js","sourcesContent":["import { FC } from 'react';\nimport Svg, { Path, Polygon } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const TrophyWinnerSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 207.142 284.123\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Polygon points=\"123.871,97.83 99.884,97.83 111.878,130.887  \" />\n            <Path d=\"M111.878,92.132c12.428,0,22.5-10.073,22.5-22.5c0-12.427-10.072-22.5-22.5-22.5c-12.426,0-22.5,10.073-22.5,22.5   C89.378,82.059,99.452,92.132,111.878,92.132z M128.457,75.095c0,0-6.287,19.564-21.908,5.93   C106.549,81.025,120.642,81.725,128.457,75.095z\" />\n            <Path d=\"M11.663,63.291l-1.441,4.389l-7.385-2.425L1.548,69.18l31.865,10.464c19.178,17.481,41.457,27.75,51.419,31.797v54.723   l-8.53,104.59c-0.555,6.807,4.514,12.772,11.318,13.327c6.805,0.554,12.773-4.51,13.328-11.317l7.429-91.084h7.002l7.429,91.084   c0.555,6.808,6.523,11.872,13.328,11.317c6.805-0.555,11.873-6.52,11.318-13.327l-8.53-104.591V111.44   c12.898-5.241,46.447-20.907,67.173-49.157c1.628-2.219-2.765-6.728-6.94-8.952l7.514-10.629c0.82-1.16,0.542-2.781-0.618-3.601h0   c-1.16-0.82-2.781-0.542-3.601,0.618l-9.333,13.203c-20.306,27.592-56.172,42.196-63.341,44.908h-0.588l-14.011,38.618   c-1.04-0.341-2.148-0.531-3.301-0.531c-1.153,0-2.261,0.19-3.301,0.531L94.566,97.83h-0.593   c-7.091-2.671-42.301-16.953-62.771-44.156c1.804-0.299,3.666-0.974,5.548-1.984c20.246,5.096,38.834-21.906,39.633-23.085   l1.983-2.925L61.187,20.04c0.476-1.218,0.918-2.442,1.32-3.666L18.452,1.906c-0.402,1.224-0.772,2.472-1.111,3.735L0.163,0   L0.026,3.531C-0.03,4.955-1.068,37.719,18.257,45.618c0.827,1.74,1.799,3.256,2.917,4.498c-0.625,0.247-1.231,0.568-1.798,0.984   c-3.562,2.614-4.332,7.62-1.718,11.183c0.543,0.74,1.098,1.468,1.658,2.191l-0.394,1.201L11.663,63.291z M111.878,138.217   c4.602,0,8.333,3.731,8.333,8.333s-3.731,8.333-8.333,8.333s-8.333-3.731-8.333-8.333S107.276,138.217,111.878,138.217z    M59.067,24.953l10.753,3.531c-4.436,5.599-15.13,17.507-26.484,18.452C49.301,41.559,54.981,33.586,59.067,24.953z M15.772,37.885   C7.189,30.393,5.636,14.461,5.383,7.324l10.753,3.531C14.308,20.229,14.155,30.018,15.772,37.885z M21.728,10.135l2.602,0.574   c-1.656,7.516-2.111,15.385-1.282,22.156l-2.645,0.324C19.539,26.126,20.009,17.938,21.728,10.135z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport { Pressable } from 'react-native';\nimport { TrophyWinnerSvg } from '../../Icons/AchievementIcon/TrophyWinnerSvg';\n\ninterface IProps {\n    onPress: CallableFunction;\n}\n\nexport const AchievementsButton: FC<IProps> = ({ onPress }) => {\n    return (\n        <Pressable\n            onPress={() => {\n                onPress();\n            }}\n        >\n            <TrophyWinnerSvg width={75} height={75} fill={'#FFC736'} />\n        </Pressable>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from '../AchievementIcon/SvgPropsInterface';\n\nexport const MutedSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 24 24\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <Path d=\"M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm14.525-4l3.536 3.536-1.414 1.414L19 13.414l-3.536 3.536-1.414-1.414L17.586 12 14.05 8.464l1.414-1.414L19 10.586l3.536-3.536 1.414 1.414L20.414 12z\" />{' '}\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from '../AchievementIcon/SvgPropsInterface';\n\nexport const UnmutedSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 24 24\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <Path d=\"M5.889 16H2a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h3.889l5.294-4.332a.5.5 0 0 1 .817.387v15.89a.5.5 0 0 1-.817.387L5.89 16zm13.517 4.134l-1.416-1.416A8.978 8.978 0 0 0 21 12a8.982 8.982 0 0 0-3.304-6.968l1.42-1.42A10.976 10.976 0 0 1 23 12c0 3.223-1.386 6.122-3.594 8.134zm-3.543-3.543l-1.422-1.422A3.993 3.993 0 0 0 16 12c0-1.43-.75-2.685-1.88-3.392l1.439-1.439A5.991 5.991 0 0 1 18 12c0 1.842-.83 3.49-2.137 4.591z\" />{' '}\n        </Svg>\n    );\n};\n","export interface GameEvent {\n    ts: number;\n    name: string;\n    payload?: any;\n}\n\nexport class SimpleEventsBus {\n    private static __instance: SimpleEventsBus;\n    private subscriptions: any;\n\n    constructor() {\n        this.subscriptions = {};\n    }\n\n    public static instance(): SimpleEventsBus {\n        if (SimpleEventsBus.__instance) {\n            return SimpleEventsBus.__instance;\n        }\n\n        SimpleEventsBus.__instance = new SimpleEventsBus();\n        return SimpleEventsBus.__instance;\n    }\n\n    public subscribe(event: string, callback: CallableFunction): string {\n        // Random enough ID generation :D\n        const id = `${Date.now()}-${Math.random()}`;\n        if (!this.subscriptions[event]) {\n            this.subscriptions[event] = {};\n        }\n\n        this.subscriptions[event][id] = callback;\n        return id;\n    }\n\n    public unsubscribe(id: string) {\n        for (const event in this.subscriptions) {\n            if (this.subscriptions[event][id]) {\n                delete this.subscriptions[event][id];\n            }\n        }\n    }\n\n    public emit(event: GameEvent) {\n        const key = event.name;\n        if (!this.subscriptions[key]) {\n            return;\n        }\n        for (const id in this.subscriptions[key]) {\n            this.subscriptions[key][id](event);\n        }\n    }\n\n    public subs() {\n        return this.subscriptions;\n    }\n}\n","export const ACHIEVEMENT_EVENTS = {\n    TRACKER_TRIGGERED: 'ACHIEVEMENT_EVENTS:TRACKER_TRIGGERED',\n    UNLOCKED: 'ACHIEVEMENT_EVENTS:UNLOCKED',\n};\n\nexport const USER_EVENTS = {\n    BUTTON_TAP: 'USER_EVENTS:BUTTON_TAP',\n    BUTTON_TAP_PENALTY: 'USER_EVENTS:BUTTON_TAP_PENALTY',\n};\n\nexport const STAT_EVENTS = {\n    TOTAL_TAPS: 'STAT_EVENTS:TOTAL_TAPS',\n    CURRENT_BUTTON_TAPS: 'STAT_EVENTS:CURRENT_BUTTON_TAPS',\n    TOTAL_PENALTIES: 'STAT_EVENTS:TOTAL_PENALTIES',\n    CURRENT_BUTTON_PENALTIES: 'STAT_EVENTS:CURRENT_BUTTON_PENALTIES',\n};\n","export class Achievement {\n    private _description: string;\n    private _unlockTs: number;\n    private _hidden: boolean;\n    private _payload: any;\n\n    constructor(public readonly id: string, public readonly title: string) {\n        this._unlockTs = -1;\n        this._hidden = false;\n    }\n\n    public get description(): string {\n        return this._description;\n    }\n\n    public get unlockTs(): number {\n        return this._unlockTs;\n    }\n\n    public get hidden(): boolean {\n        return this._hidden;\n    }\n\n    public get payload(): any {\n        return this._payload;\n    }\n\n    public isLocked() {\n        return this._unlockTs < 0;\n    }\n\n    public withDescription(description: string): Achievement {\n        this._description = description;\n        return this;\n    }\n\n    public unlockedAt(ts: number): Achievement {\n        this._unlockTs = ts;\n        return this;\n    }\n\n    public setHidden(hidden: boolean): Achievement {\n        this._hidden = hidden;\n        return this;\n    }\n\n    public withPayload(payload: any) {\n        this._payload = payload;\n    }\n}\n","import { Achievement } from './Achievement';\n\nexport class AchievementsCollection {\n    private _list: Achievement[];\n    constructor() {\n        this._list = [];\n    }\n\n    public get list() {\n        return this._list;\n    }\n\n    public fromJSON(json: string): AchievementsCollection {\n        this._list = [];\n        const data: any = JSON.parse(json);\n        for (const item of data) {\n            this._list.push(\n                new Achievement(item.id, item.title)\n                    .withDescription(item.description)\n                    .setHidden(!!item.hidden)\n            );\n        }\n        return this;\n    }\n\n    public toJSON(): string {\n        return JSON.stringify(\n            this._list.map((item) => ({\n                id: item.id,\n                title: item.title,\n                description: item.description,\n                hidden: item.hidden,\n            }))\n        );\n    }\n\n    unlock(id: string, unlockTs: number, payload?: any): Achievement | null {\n        let result = null;\n        this._list = this._list.map((item) => {\n            if (item.id !== id) {\n                return item;\n            }\n            if (item.unlockTs > -1) {\n                return item;\n            }\n\n            item.unlockedAt(unlockTs);\n            if (payload) {\n                item.withPayload(payload);\n            }\n            result = item;\n            return item;\n        });\n        return result;\n    }\n\n    unlockAll() {\n        for (const achievement of this._list) {\n            this.unlock(achievement.id, 1);\n        }\n    }\n}\n","import { IAppClock } from '../utils/clock/AppClockInterface';\nimport { GameEvent } from '../utils/events/SimpleEventsBus';\nimport { ACHIEVEMENT_EVENTS, STAT_EVENTS, USER_EVENTS } from './events';\nimport { ITrackerEvent } from './Game/Achievements/Trackers/ITracker';\n\nexport class EventsFactory {\n    private static _clock: IAppClock;\n\n    public static init(clock: IAppClock) {\n        EventsFactory._clock = clock;\n    }\n\n    public static userTap(ts: number): GameEvent {\n        return {\n            name: USER_EVENTS.BUTTON_TAP,\n            ts: EventsFactory._clock.now(),\n        };\n    }\n\n    public static userTapPenalty(ts: number): GameEvent {\n        return {\n            name: USER_EVENTS.BUTTON_TAP_PENALTY,\n            ts: EventsFactory._clock.now(),\n        };\n    }\n\n    public static totalTapsIncreased(value: number): GameEvent {\n        return {\n            name: STAT_EVENTS.TOTAL_TAPS,\n            ts: EventsFactory._clock.now(),\n            payload: { value },\n        };\n    }\n\n    public static currentButtonTapsIncreased(value: number): GameEvent {\n        return {\n            name: STAT_EVENTS.CURRENT_BUTTON_TAPS,\n            ts: EventsFactory._clock.now(),\n            payload: { value },\n        };\n    }\n\n    public static totalPenaltiesIncreased(value: number): GameEvent {\n        return {\n            name: STAT_EVENTS.TOTAL_PENALTIES,\n            ts: EventsFactory._clock.now(),\n            payload: { value },\n        };\n    }\n\n    public static currentButtonPenaltiesIncreased(value: number): GameEvent {\n        return {\n            name: STAT_EVENTS.CURRENT_BUTTON_PENALTIES,\n            ts: EventsFactory._clock.now(),\n            payload: { value },\n        };\n    }\n\n    public static achievementsTrackerTriggered(\n        payload: ITrackerEvent\n    ): GameEvent {\n        return {\n            ts: EventsFactory._clock.now(),\n            name: ACHIEVEMENT_EVENTS.TRACKER_TRIGGERED,\n            payload: payload,\n        };\n    }\n\n    public static achievementUnlocked(payload: any): GameEvent {\n        return {\n            ts: EventsFactory._clock.now(),\n            name: ACHIEVEMENT_EVENTS.UNLOCKED,\n            payload: payload,\n        };\n    }\n}\n","import {\n    GameEvent,\n    SimpleEventsBus,\n} from '../../../../utils/events/SimpleEventsBus';\nimport { STAT_EVENTS } from '../../../events';\nimport { EventsFactory } from '../../../EventsFactory';\nimport { ITracker } from './ITracker';\n\nexport class ButtonPressFailureTracker implements ITracker {\n    constructor(private readonly _events: SimpleEventsBus) {\n        this._events.subscribe(\n            STAT_EVENTS.TOTAL_PENALTIES,\n            (event: GameEvent) => {\n                this.handleTotalPenaltiesIncrease(event);\n            }\n        );\n    }\n\n    toJSON(): string {\n        return '';\n    }\n\n    fromJSON(json: string): void {}\n\n    private handleTotalPenaltiesIncrease(event: GameEvent): void {\n        const clicksTriggers = [1, 5, 20, 100, 500];\n        for (const trigger of clicksTriggers) {\n            if (event.payload.value === trigger) {\n                this._events.emit(\n                    EventsFactory.achievementsTrackerTriggered({\n                        id: `PENALTY:${trigger}`,\n                        payload: trigger,\n                    })\n                );\n            }\n        }\n    }\n}\n","import { IAppClock } from '../../../../utils/clock/AppClockInterface';\nimport {\n    GameEvent,\n    SimpleEventsBus,\n} from '../../../../utils/events/SimpleEventsBus';\nimport { STAT_EVENTS } from '../../../events';\nimport { EventsFactory } from '../../../EventsFactory';\nimport { ITracker } from './ITracker';\n\nexport class ButtonPressTracker implements ITracker {\n    constructor(private readonly _events: SimpleEventsBus) {\n        this._events.subscribe(STAT_EVENTS.TOTAL_TAPS, (event: GameEvent) => {\n            this.handleTotalTapsIncrease(event);\n        });\n    }\n\n    toJSON(): string {\n        return '';\n    }\n\n    fromJSON(json: string): void {}\n\n    private handleTotalTapsIncrease(event: GameEvent): void {\n        const clicksTriggers = [1, 5, 20, 100, 500];\n        for (const trigger of clicksTriggers) {\n            if (event.payload.value === trigger) {\n                this._events.emit(\n                    EventsFactory.achievementsTrackerTriggered({\n                        id: `PRESS:${trigger}`,\n                        payload: trigger,\n                    })\n                );\n            }\n        }\n    }\n}\n","import { IAppClock } from '../../utils/clock/AppClockInterface';\nimport { GameEvent, SimpleEventsBus } from '../../utils/events/SimpleEventsBus';\nimport { IAppStorage } from '../../utils/storage/AppStorageInterface';\nimport { ACHIEVEMENT_EVENTS } from '../events';\nimport { Achievement } from './Achievements/Achievement';\nimport { AchievementsCollection } from './Achievements/AchievementsCollection';\nimport { ButtonPressFailureTracker } from './Achievements/Trackers/ButtonPressFailureTracker';\nimport { ButtonPressTracker } from './Achievements/Trackers/ButtonPressTracker';\nimport { ITracker, ITrackerEvent } from './Achievements/Trackers/ITracker';\n\nexport class Achievements {\n    private readonly STORAGE_KEY_ACHIEVEMENTS = 'UNLOCKED_ACHIEVEMENTS';\n    private _collection: AchievementsCollection = new AchievementsCollection();\n    private trackers: ITracker[] = [];\n\n    constructor(\n        private readonly _clock: IAppClock,\n        private readonly _storage: IAppStorage,\n        private readonly _events: SimpleEventsBus\n    ) {\n        this.trackers = [\n            new ButtonPressTracker(this._events),\n            new ButtonPressFailureTracker(this._events),\n        ];\n        // Init collection\n        this._collection = this._collection.fromJSON(\n            JSON.stringify(require('./Achievements/Achievements.json'))\n        );\n        this._storage.get(this.STORAGE_KEY_ACHIEVEMENTS).then((result) => {\n            if (result) {\n                const parsed = JSON.parse(result);\n                for (const { id, ts, payload } of parsed) {\n                    this._collection.unlock(id, ts, payload);\n                }\n            }\n        });\n    }\n\n    public getAll(): Achievement[] {\n        return this._collection.list;\n    }\n\n    public getTotal(): number {\n        return 0;\n    }\n\n    public triggered(event: GameEvent) {\n        if (event.name !== ACHIEVEMENT_EVENTS.TRACKER_TRIGGERED) {\n            return;\n        }\n        const payload: ITrackerEvent = event.payload;\n        const unlockedAchievement = this._collection.unlock(\n            payload.id,\n            event.ts,\n            payload.payload\n        );\n        if (unlockedAchievement) {\n            this.persist();\n        }\n    }\n\n    private persist() {\n        this._storage.set(\n            this.STORAGE_KEY_ACHIEVEMENTS,\n            JSON.stringify(\n                this._collection.list\n                    .filter((item) => item.unlockTs > 0)\n                    .map((item) => ({\n                        id: item.id,\n                        ts: item.unlockTs,\n                    }))\n            )\n        );\n    }\n\n    public unlockAll() {\n        this._collection.unlockAll();\n        this.persist();\n    }\n\n    public lockAll() {\n        this._collection = this._collection.fromJSON(\n            JSON.stringify(require('./Achievements/Achievements.json'))\n        );\n        this._storage.delete(this.STORAGE_KEY_ACHIEVEMENTS);\n    }\n}\n","export class TimingManager {\n    constructor() {}\n\n    public getCoolDown(counter: number): number {\n        const coolDownsInSeconds = [\n            5,\n            10,\n            20,\n            30,\n            60,\n            90,\n            120,\n            180,\n            360,\n            720,\n            1440,\n            2880, // 0.5 hrs\n            3600, // 1 hrs\n            7200, // 2 hrs\n            14400, // 4 hrs\n            28800, // 8 hrs\n            43200, // 12 hrs\n        ];\n        const index = counter > 0 ? counter - 1 : 0;\n        if (index < coolDownsInSeconds.length) {\n            return coolDownsInSeconds[index] * 1000;\n        }\n        return 64800 * 1000; // 18 hrs\n    }\n\n    public getPressTimeFrame(): number {\n        return 24 * 60 * 60 * 1000;\n    }\n\n    public getPenaltyTime(counter: number): number {\n        const penalty = Math.floor(this.getCoolDown(counter) * 0.01);\n        if (penalty < 20000) {\n            return 20 * 1000;\n        }\n        return penalty;\n    }\n}\n","import { IAppClock } from '../../utils/clock/AppClockInterface';\nimport { IAppStorage } from '../../utils/storage/AppStorageInterface';\nimport { ButtonConfig } from './ButtonConfig';\nimport { TimingManager } from './TimingManager';\n\nexport class ButtonController {\n    private _config: ButtonConfig;\n    private timingManager: TimingManager;\n    private CONFIG_STORAGE_KEY = 'GAME_CONFIG';\n\n    constructor(\n        private readonly _clock: IAppClock,\n        private readonly _storage: IAppStorage\n    ) {\n        this.timingManager = new TimingManager();\n    }\n\n    public async initFromConfig() {\n        const config = await this._storage.get(this.CONFIG_STORAGE_KEY);\n        if (config) {\n            this._config = JSON.parse(config);\n            return;\n        }\n        this.resetButton();\n    }\n\n    public async persistConfig() {\n        await this._storage.set(\n            this.CONFIG_STORAGE_KEY,\n            JSON.stringify(this._config)\n        );\n    }\n\n    public getNextPressTimeFrameStart(): number {\n        return this._config.nextPressTimestamp;\n    }\n\n    public getNextPressTimeFrameEnd(): number {\n        return (\n            this._config.nextPressTimestamp +\n            this.timingManager.getPressTimeFrame()\n        );\n    }\n\n    public buttonPressedOnTime() {\n        this._config.counter++;\n        this._config.nextPressTimestamp =\n            this._clock.now() +\n            this.timingManager.getCoolDown(this._config.counter);\n\n        this.persistConfig();\n    }\n\n    public isButtonExpired(): boolean {\n        if (this._config.nextPressTimestamp == -1) {\n            return false;\n        }\n        return this._clock.now() > this.getNextPressTimeFrameEnd();\n    }\n\n    public resetButton() {\n        this._config = {\n            counter: 0,\n            nextPressTimestamp: -1,\n        };\n        this.persistConfig();\n    }\n\n    public getPenaltyTime(): number {\n        return this.timingManager.getPenaltyTime(this._config.counter);\n    }\n\n    public buttonPressedTooEarly() {\n        this._config.nextPressTimestamp =\n            this._config.nextPressTimestamp + this.getPenaltyTime();\n\n        this.persistConfig();\n    }\n\n    public getCounter(): number {\n        return this._config.counter;\n    }\n\n    public getPressedTimesNumber(): number {\n        return 0;\n    }\n\n    public canBePressed(): boolean {\n        return true;\n    }\n\n    public expired(): boolean {\n        return false;\n    }\n}\n","import { IAppClock } from '../../utils/clock/AppClockInterface';\nimport { SimpleEventsBus } from '../../utils/events/SimpleEventsBus';\nimport { IAppStorage } from '../../utils/storage/AppStorageInterface';\nimport { EventsFactory } from '../EventsFactory';\n\nexport class UserStats {\n    private totalTaps: number = 0;\n    private totalPenalties: number = 0;\n\n    constructor(\n        private readonly clock: IAppClock,\n        private readonly storage: IAppStorage,\n        private readonly events: SimpleEventsBus\n    ) {}\n\n    public tap(event: any) {\n        this.totalTaps++;\n        this.events.emit(EventsFactory.totalTapsIncreased(this.totalTaps));\n    }\n\n    public tapPenalty(event: any) {\n        this.totalPenalties++;\n        this.events.emit(\n            EventsFactory.totalPenaltiesIncreased(this.totalPenalties)\n        );\n    }\n}\n","import { Audio } from 'expo-av';\nimport { Sound } from 'expo-av/build/Audio';\n\nconst BUTTON_PRESS = require('../../assets/sounds/button-press.mp3');\nconst BUTTON_PENALTY = require('../../assets/sounds/button-penalty.mp3');\n\nexport class Sounds {\n    public static SOUND_BUTTON_PRESS = 'SOUND_BUTTON_PRESS';\n    public static SOUND_BUTTON_PENALTY = 'SOUND_BUTTON_PENALTY';\n\n    private _buttonPress: Sound | null = null;\n    private _buttonPenalty: Sound | null = null;\n\n    constructor(private muted: boolean = false) {}\n\n    public mute() {\n        this.muted = true;\n    }\n\n    public unmute() {\n        this.muted = false;\n    }\n\n    public get buttonPress(): Sound | null {\n        if (this.muted) {\n            return null;\n        }\n        return this._buttonPress;\n    }\n\n    public get buttonPenalty(): Sound | null {\n        if (this.muted) {\n            return null;\n        }\n        return this._buttonPenalty;\n    }\n\n    public async init() {\n        const press = await Audio.Sound.createAsync(BUTTON_PRESS);\n        const penalty = await Audio.Sound.createAsync(BUTTON_PENALTY);\n\n        this._buttonPress = press.sound;\n\n        this._buttonPenalty = penalty.sound;\n        this._buttonPenalty.setVolumeAsync(0.4);\n    }\n\n    public play(sound: string) {\n        if (this.muted) {\n            return;\n        }\n\n        switch (sound) {\n            case Sounds.SOUND_BUTTON_PRESS:\n                this._buttonPress?.replayAsync();\n                return;\n            case Sounds.SOUND_BUTTON_PENALTY:\n                this._buttonPenalty?.replayAsync();\n                return;\n        }\n    }\n}\n","import { IAppClock } from '../utils/clock/AppClockInterface';\nimport { GameEvent, SimpleEventsBus } from '../utils/events/SimpleEventsBus';\nimport { IAppStorage } from '../utils/storage/AppStorageInterface';\nimport { ACHIEVEMENT_EVENTS, STAT_EVENTS, USER_EVENTS } from './events';\nimport { Achievements } from './Game/Achievements';\nimport { ButtonController } from './Game/ButtonController';\nimport { UserStats } from './Game/UserStats';\nimport { Sounds } from './Sounds';\n\nexport class Game {\n    private static _debug: boolean = false;\n    private static _controller: ButtonController;\n    private static _achievements: Achievements;\n    private static _clock: IAppClock;\n    private static _storage: IAppStorage;\n    private static _userStats: UserStats;\n    private static _events: SimpleEventsBus;\n    private static _sounds: Sounds;\n\n    public static get clock(): IAppClock {\n        return Game._clock;\n    }\n\n    public static get storage(): IAppStorage {\n        return Game._storage;\n    }\n\n    public static get controller(): ButtonController {\n        return Game._controller;\n    }\n\n    public static get achievements(): Achievements {\n        return Game._achievements;\n    }\n\n    public static get stats(): UserStats {\n        return Game._userStats;\n    }\n\n    public static get events(): SimpleEventsBus {\n        return Game._events;\n    }\n\n    public static get sounds(): Sounds {\n        return Game._sounds;\n    }\n\n    public static get debug(): boolean {\n        return Game._debug;\n    }\n\n    public static enableDebug() {\n        Game._debug = true;\n    }\n\n    public static async init(storage: IAppStorage, clock: IAppClock) {\n        Game._clock = clock;\n        Game._storage = storage;\n\n        Game._events = new SimpleEventsBus();\n\n        Game._controller = new ButtonController(clock, storage);\n        await Game.controller.initFromConfig();\n\n        Game._achievements = new Achievements(clock, storage, this._events);\n        Game._userStats = new UserStats(clock, storage, this._events);\n        Game.wireUpEvents();\n\n        Game._sounds = new Sounds();\n        await Game.sounds.init();\n    }\n\n    private static wireUpEvents() {\n        Game._events.subscribe(USER_EVENTS.BUTTON_TAP, (event: GameEvent) => {\n            Game._userStats.tap(event);\n        });\n\n        Game._events.subscribe(\n            USER_EVENTS.BUTTON_TAP_PENALTY,\n            (event: GameEvent) => {\n                Game._userStats.tapPenalty(event);\n            }\n        );\n\n        Game._events.subscribe(\n            ACHIEVEMENT_EVENTS.TRACKER_TRIGGERED,\n            (event: GameEvent) => {\n                Game._achievements.triggered(event);\n            }\n        );\n    }\n}\n","import { FC, useState } from 'react';\nimport { Pressable } from 'react-native';\nimport { MutedSvg } from '../../Icons/Common/MutedSvg';\nimport { UnmutedSvg } from '../../Icons/Common/UnmutedSvg';\nimport { Game } from '../../services/Game';\n\nexport const ToggleSoundButton: FC = () => {\n    const size = 50;\n    const [muted, setMuted] = useState(false);\n    return (\n        <Pressable\n            onPress={() => {\n                if (muted) {\n                    Game.sounds.unmute();\n                } else {\n                    Game.sounds.mute();\n                }\n                setMuted(!muted);\n            }}\n        >\n            {muted && <MutedSvg width={size} height={size} fill=\"#B4C0D0\" />}\n            {!muted && <UnmutedSvg width={size} height={size} fill=\"#778da9\" />}\n        </Pressable>\n    );\n};\n","import { FC } from 'react';\nimport { View } from 'react-native';\nimport { AchievementsButton } from './ControlsBar/AchievementsButton';\nimport { ToggleSoundButton } from './ControlsBar/ToggleSoundButton';\n\ninterface IProps {\n    showAchievements: CallableFunction;\n}\n\nexport const ControlsBar: FC<IProps> = ({ showAchievements }) => {\n    return (\n        <View\n            style={{\n                position: 'absolute',\n                bottom: 30,\n                left: 0,\n                right: 0,\n                paddingBottom: 10,\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexDirection: 'row',\n            }}\n        >\n            <View\n                style={{\n                    marginRight: 20,\n                    flex: 1,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n            >\n                <AchievementsButton onPress={showAchievements} />\n            </View>\n            <View style={{ marginRight: 20 }}>\n                <ToggleSoundButton />\n            </View>\n        </View>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const BlockSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 35 35\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill=\"none\"\n        >\n            <Path\n                d=\"M17.5 30.625C24.7487 30.625 30.625 24.7487 30.625 17.5C30.625 10.2513 24.7487 4.375 17.5 4.375C10.2513 4.375 4.375 10.2513 4.375 17.5C4.375 24.7487 10.2513 30.625 17.5 30.625Z\"\n                stroke={fill ?? '#000'}\n            />\n            <Path d=\"M8.75 7.29167L26.9792 26.9792\" stroke={fill ?? '#000'} />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const ClickSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 200 200\"\n            fill={fill ?? '#000'}\n            width={width ?? 100}\n            height={height ?? 100}\n        >\n            <Path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                fill={fill ?? '#000'}\n                d=\"M82.0276 0V25H88.2776V0H82.0276ZM122.043 16.1054L102.615 31.8384L106.548 36.6956L125.977 20.9626L122.043 16.1054ZM134.574 58.2026L110.215 52.5789L108.809 58.6687L133.168 64.2925L134.574 58.2026ZM37.1371 64.2925L61.4963 58.6687L60.0904 52.5789L35.7312 58.2026L37.1371 64.2925ZM44.3287 20.9626L63.7574 36.6956L67.6906 31.8384L48.262 16.1054L44.3287 20.9626ZM122.645 193.75C148.537 193.75 169.528 171.342 169.528 146.875C169.528 146.875 169.528 161.333 169.528 146.875V123.432V109.385C169.528 104.202 165.366 100 160.153 100C154.975 100 150.778 104.195 150.778 109.385V112.5H144.528V96.9152C144.528 91.7153 140.366 87.5 135.153 87.5C129.975 87.5 125.778 91.6971 125.778 96.9152V106.25H119.528V90.6652C119.528 85.4653 115.366 81.25 110.153 81.25C104.975 81.25 100.778 85.4471 100.778 90.6652V112.5H94.5276V46.9078C94.5276 41.712 90.3664 37.5 85.1526 37.5C79.975 37.5 75.7776 41.6696 75.7776 46.9078V117.5C62.9126 103.747 45.9753 88.6195 39.0341 95.5982C32.2393 102.43 49.7486 121.255 74.1987 162.394C85.2151 180.931 99.1544 193.747 122.645 193.75ZM175.778 146.875C175.778 176.215 151.993 200 122.653 200C103.197 200 82.6639 190.922 68.5328 165.176C48.136 128.016 22.0517 103.645 34.4721 91.2247C43.3574 82.3394 57.3079 90.8635 69.5276 102.292V46.9276C69.5276 38.2214 76.5232 31.25 85.1526 31.25C93.8422 31.25 100.778 38.2691 100.778 46.9276V78.1148C103.389 76.1582 106.635 75 110.153 75C116.918 75 122.621 79.2342 124.814 85.1758C127.569 82.7374 131.188 81.25 135.153 81.25C143.842 81.25 150.778 88.2389 150.778 96.8602V96.9443C153.389 94.9907 156.635 93.8387 160.153 93.8387C168.842 93.8387 175.778 100.835 175.778 109.464V146.875Z\"\n            />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const FingersBrokenSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 247.516 369.046\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M243.258,62.663c-11.3-4.78-24.495,0.486-31.446,12.656c0,0-3.991,15.151-10.054,25.344   c-4.584,7.707-11.299,11.04-12.983,11.602c-3.911,1.304-6.085,0.435-6.522-1.304c-0.433-1.737,7.975-19.91,9.712-23.823   c0.957-2.15,11.288-15.825,13.794-28.475c2.052-10.363-3.167-15.167-3.333-25.5c-0.167-10.333-8.285-16.296-13.5-17.167   c-6.085-0.868-9.279,1.945-11.016,10.204c-1.741,8.259,11.394,25.841,8.35,32.796c0,0-17.893,17.574-20.5,25.833   c-2.607,8.258-8.717,12.656-10.453,11.788c-1.737-0.869-4.813-15.209-4.38-19.121c1.737-3.044,9.494-30.75,8.623-33.359   c-0.871-2.607-9.53-44.995-19.625-44.125c-4.354,0.375-11.328,0.106-12.631,10.975c-1.304,9.996,9.44,29.917,9.006,32.525   c-0.433,2.609-10.64,25.506-10.206,28.984c0.433,3.477,2.478,26.476-1,29.083c-3.474,2.608-13.25,5.5-13.25,5.5   s-9.509-21.162-11.917-30.417c-1.257-4.831,3.395-14.855,2.35-18.732C99.235,46.63,87.055,22.061,83.092,19.08   c-3.718-2.796-12.17-2.172-14.778,3.478c-1.875,4.064,10.607,19.533,12.778,37.772c0.848,7.121-6.714,21.386-5.25,27   c5.219,19.994,15.134,42.323,5.134,60.142c0,0-3.757,7.753-27.231-11.809c-23.47-19.558-33.241,2.53-44.107,6.875   c-10.867,4.347-10.433,11.302-8.692,14.343c1.737,3.044,8.259,4.781,11.3,4.781c3.041,0,13.748-8.187,19.833-1.667   c0,0,8.038,15.296,11.083,24.423c3.045,9.13,4.786,11.303,7.822,14.781c3.045,3.477,26.519,29.556,35.211,32.599   c8.692,3.043,14.344,20.864,13.907,32.601c-0.369,10.01-4.218,78.506-6.691,104.646h13.22l8.82-98.968l-5.142-23.808l5.905-0.513   l12.066,8.215l6.749-4.996l3.777,4.757l-3.931,14.27l-5.55,53.967l-1.678,47.076h17.381l0.903-29.867l0.58-56.185l4.112-25.833   l4.589-2.499l5.63,3.726l-1.916,23.207l5.174,64.031l-3.594,23.419h18.507c-0.628-19.208-2.553-77.138-3.277-87.261   c-0.686-9.626-0.87-34.338,0-36.944c0.87-2.608,22.167-44.772,22.167-53.466c0,0,10.871-52.594,9.13-57.376   c-0.729-2.001,5.422-6.488,10.394-18.336c3.184-7.586,4.311-22.042,8-28.167c4.315-7.162,14.167-8.833,17.833-11.333   C246.925,73.663,250.647,66.576,243.258,62.663z M186.607,29.465l1.927-1.554l2.974-0.04l2.4,0.609l2.616,8.015l2.534,10.524   l-1.491,1.887l-4.014,0.813l-2.271-1.439l-4.25-12.31L186.607,29.465z M188.067,65.52l6.292-8.956l4.283-0.056l2.324,2.752   l-3.811,5.76l-6.639,9.215l-2.282,7.085l-3.291,0.661l-5.11-3.589l-0.182-2.78L188.067,65.52z M167.086,97.228l3.862-7.409   l5.563-4.956c0,0,4.878,2.71,4.899,3.442c0.021,0.732-2.826,8.786-2.826,8.786l-2.893,9.626l-4.494,6.646l-5.358-2.639   l-2.368-2.761L167.086,97.228z M151.611,178.063l6.107-24.694l0.571-22.922l1.087-13.175l8.741,0.715l5.025,1.971l-3.731,11.707   l-3.833,34.833l-1.236,22.71l-6.311,6.838l-8.401-4.009l-2.529-7.136L151.611,178.063z M134.634,19.579l-0.676-7.637l2.108-1.444   l3.326,0.512l2.703,1.159l3.172,9.804l3.156,12.704l-1.61,1.912l-4.465,0.19l-2.584-2.099L134.634,19.579z M138.845,62.467   l3.56-11.057l2.489-6.655l4.421-0.04l3.287,3.281l-3.585,10.624l-3.006,12.978l-2.778,1.68l-7.387-1.524l-1.939-2.925   L138.845,62.467z M132.024,79.172c0.149-0.807,6.157-3.438,6.157-3.438l5.476,5.893l2.201,11.411l2.869,10.55l-2.976,2.356   l-6.402,1.687l-3.972-7.681l-1.642-10.855C133.734,89.094,131.875,79.979,132.024,79.172z M99.807,102.914l3.419,10.799   l-2.418,2.717l-5.405,2.541l-4.372-6.727l-2.716-9.677c0,0-2.699-8.105-2.665-8.837c0.034-0.732,4.961-3.351,4.961-3.351   l5.471,5.057L99.807,102.914z M78.492,33.513l1.432-2.02l2.291-1.898l2.475-0.066l3.892,5.229l4.744,12.128l-0.796,2.568   l-3.583,1.984l-2.359-0.47l-4.893-9.656L78.492,33.513z M84.733,86.125l-1.852-2.799l3.414-6.615l1.851-11.206l1.395-6.764   l3.59-0.293l2.981,3.076L94.2,72.301L92.98,85.386l-2.099,1.831L84.733,86.125z M40.425,147.83l-5.817-1.494l-8.811,1.918   l-10.404,4.251l-1.802-5.174l12.557-8.051l8.366-2.227l11.813,3.153L40.425,147.83z M48.994,171.633l1.834-9.303l-1.625-8.125   l-5-3.625l8.25-7.625L65.9,167.784l1.192,11.796l-8,3L48.994,171.633z M96.664,227.612l-17.615-11.886l-9.435-10.784l-4.291-9.495   l-4.772-7.283l12.893-7.959l8.379,13.69l13.979,13.016l5.337,9.101L96.664,227.612z M103.571,161.709l-6.014-22.126l-4.992-13.86   l7.197-1.154l5.379,0.45l3.422,12.547l6.297,34.473l5.316,22.114l-4.09,8.358l-9.197-1.437l-4.465-6.113l2.364-7.844   L103.571,161.709z M103.911,227.498l2.099-12.057l6.235-5.443l6.333-0.167l4.333-2.833l2.165,6.597l0.865,9.148L103.911,227.498z    M121.63,243.372l-8.758-4.823l-0.127-8.052l12-2.333l1.457,3.609l2.376,7.225L121.63,243.372z M126.801,212.84l1.083-6.767   l2.707-2.942l6.497-0.883l7.309,4.119l0.271,7.65l-2.707,6.473l-11.911-0.883L126.801,212.84z M145.048,236.532l-6.304,2.549   l-6.304-2.231l-1.906-4.143l0.44-10.038l5.571,1.275l5.864-0.159l3.225,6.055L145.048,236.532z M146.396,127.935l-3.961,36.759   l-0.988,23.887l-7.793,7.564l-7.326-0.814l-3.75-10.5l5.25-15.75l1.75-18.25l2.749-23.477l1.04-13.881l8.961,0.109l6.75,1.75   L146.396,127.935z M147.584,204.743l10.467-0.579l-0.974,15.333l-8.083,0.25l-1.951-5.746L147.584,204.743z M161.775,236.874   l-10.54-0.297l-3.008-4.858l0.818-4.985l2.331-2.233l5.721-0.836l6.541,2.801l0.396,5.592L161.775,236.874z M172.164,234.018   l-4.117-0.294l-1.453-3.531l1.453-4.56l6.539-0.441l0.242,3.972L172.164,234.018z M175.515,219.383l-14.135-0.031l-0.252-6.261   l6.077-7.325l8.861,0.917l2.894,5.702L175.515,219.383z M194.999,155.611l-11.805,39.964l-6.447,4.958l-7.064-4.307l-1.439-6.228   l4.833-5.167l8.333-19.833l3.167-19l2.5-10.833l7.75,1.607l4.5,6.06L194.999,155.611z M206.71,119.578l-3.87,8.897l-5.157,5.598   l-5.061-3.782l-2.072-3.25l4.704-9.837l4.607-6.491l6.047-3.691c0,0,4.575,3.747,4.521,4.476   C210.374,112.227,206.71,119.578,206.71,119.578z M220.375,86.671l-3.451,9.404l-0.303,6.494l-2.591,1.409l-5.064-1.654   l-0.778-2.267l4.733-10.599l3.22-9.098l3.554-1.164l2.555,1.685L220.375,86.671z M238.693,72.272L232.5,74.35l-8.138,2.03   l-1.471-1.143l-0.655-3.105l1.101-1.769l9.51-3.371l5.037-0.372l1.217,1.483l0.05,2.304L238.693,72.272z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path, Polygon, SvgXml } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const HighFiveSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 269.959 208.336\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M191.891,119.107c8.532,3.102,17.812-0.205,22.628-7.44c2.94,0.657,5.981-0.948,7.037-3.854   c1.148-3.158-0.481-6.648-3.639-7.796c-0.055-0.02-0.111-0.033-0.165-0.051c-0.397-7.498-5.177-14.394-12.678-17.121   c-7.501-2.727-15.593-0.511-20.712,4.982c-0.055-0.021-0.105-0.048-0.16-0.068c-3.157-1.148-6.647,0.481-7.795,3.639   c-1.057,2.906,0.243,6.089,2.918,7.473C178.37,107.511,183.361,116.006,191.891,119.107z M187.394,103.829   c0.405-1.113,1.032-2.079,1.807-2.878c-2.887-1.666-4.255-5.205-3.077-8.446c1.321-3.633,5.337-5.508,8.97-4.187   c2.523,0.917,4.195,3.134,4.54,5.62c1.862-1.683,4.567-2.309,7.09-1.392c3.633,1.321,5.508,5.337,4.187,8.97   c-1.178,3.241-4.5,5.075-7.783,4.498c0.082,1.11-0.058,2.253-0.463,3.366c-1.533,4.217-6.195,6.393-10.412,4.86   C188.037,112.708,185.861,108.046,187.394,103.829z\" />\n            <Path d=\"M191.677,97.716c1.555,0.565,3.279-0.24,3.844-1.794c0.565-1.555-0.24-3.279-1.794-3.844   c-1.555-0.565-3.279,0.24-3.844,1.794C189.318,95.427,190.123,97.151,191.677,97.716z\" />\n            <Path d=\"M203.308,101.945c1.555,0.565,3.279-0.24,3.844-1.794c0.565-1.555-0.24-3.279-1.794-3.844   c-1.555-0.565-3.279,0.24-3.844,1.794C200.948,99.655,201.753,101.379,203.308,101.945z\" />\n            <Path d=\"M190.421,106.302l-0.891,0.461c0.649,1.254,2.202,3.053,4.58,3.917c1.489,0.541,3.3,0.717,5.415,0.164l-0.506-1.935   c-5.281,1.381-7.605-2.862-7.713-3.065l0,0l0,0c0-0.001-0.002-0.003-0.002-0.003L190.421,106.302z\" />\n            <Path d=\"M269.887,154.111c0.293-1.065-0.333-2.166-1.397-2.46c-14.468-3.975-18.651,10.065-22.012,21.354   c-2.069,6.951-4.209,14.138-8.147,16.024c-1.647,0.789-3.67,0.676-6.183-0.353c-2.793-1.141-5.386-2.571-7.793-4.179l6.548-12.693   c0.775-1.504,0.88-3.265,0.289-4.85s-1.825-2.846-3.396-3.474l-16.883-6.742c0.518-0.698,0.881-1.463,1.01-2.304   c2.115-13.842,5.547-24.239,7.451-29.31c6.06,6.106,13.196,18.383,16.896,43.052c0.372,2.479,2.505,4.259,4.938,4.259   c0.247,0,0.497-0.019,0.748-0.057c2.731-0.409,4.613-2.955,4.203-5.687c-5.129-34.196-17.121-48.086-26.136-53.729   c-1.326,0.765-2.845,1.192-4.42,1.147c-5.702,7.458-15.568,10.404-24.495,7.158c-6.749-2.454-11.631-7.966-13.434-14.562   l-16.084-3.335l-12.255-29.938c-1.046-2.555-3.966-3.778-6.521-2.732c-2.556,1.046-3.779,3.966-2.733,6.521l13.263,32.399   c0.63,1.539,1.984,2.664,3.612,3.001l17.923,3.716c1.992,5.429,7.678,21.789,10.169,38.096c0.129,0.841,0.491,1.606,1.01,2.304   l-16.884,6.742c-1.571,0.628-2.804,1.889-3.396,3.474s-0.487,3.346,0.289,4.85l11.158,21.629l-1.4,0.311   c-3.235,0.719-5.274,3.924-4.555,7.159c0.621,2.796,3.101,4.699,5.851,4.699c0.431,0,0.869-0.047,1.308-0.144l9-2   c1.816-0.404,3.343-1.628,4.132-3.313c0.79-1.685,0.752-3.641-0.101-5.295l-11.698-22.675l15.447-6.169   c1.531-0.612,2.67-1.783,3.278-3.184c0.608,1.401,1.747,2.573,3.278,3.184l0.278,0.111c2.535,4.193,6.167,9.352,10.973,14.189   l-7.502,14.543c-0.854,1.654-0.891,3.61-0.102,5.295c0.789,1.686,2.315,2.909,4.132,3.313l9,2c0.438,0.097,0.876,0.144,1.308,0.144   c2.75,0,5.23-1.903,5.851-4.699c0.719-3.235-1.32-6.44-4.555-7.159l-1.4-0.311l2.757-5.344c2.511,1.637,5.217,3.099,8.133,4.291   c1.895,0.774,3.678,1.162,5.336,1.162c1.463,0,2.829-0.302,4.088-0.905c5.537-2.652,7.828-10.346,10.252-18.49   c3.998-13.429,7.141-21.387,17.117-18.638C268.493,155.803,269.594,155.176,269.887,154.111z M208.607,168.741l8.601,3.434   l-2.236,4.334C212.517,173.921,210.396,171.259,208.607,168.741z\" />\n            <Path d=\"M94.533,81.496c1.556,1.865,3.825,2.876,6.146,2.876c1.081,0,2.173-0.219,3.21-0.673l34.65-15.191   c4.046-1.774,5.889-6.493,4.114-10.539c-1.774-4.047-6.492-5.89-10.539-4.115L102.97,66.632L83.905,43.773   c-0.011-0.013-0.024-0.025-0.035-0.038c-3.749,2.268-8.133,3.569-12.8,3.569c-0.931,0-1.874-0.053-2.805-0.158   c-6.582-0.741-12.482-4.001-16.612-9.18c-1.306-1.637-2.384-3.405-3.227-5.265l-6.695-1.769c-0.782-0.207-1.568-0.285-2.336-0.249   c-0.636-0.042-1.285-0.018-1.941,0.098c-8.388,1.501-17.771,7.729-24.752,13.265c-5.468,4.336-9.462,8.247-10.348,9.13   c-2.455,2.446-3.056,6.194-1.489,9.285l20.653,40.737c1.41,2.781,4.224,4.384,7.143,4.384c1.216,0,2.451-0.279,3.61-0.867   c3.941-1.998,5.516-6.812,3.519-10.753L17.855,60.59c1.583-1.395,3.323-2.849,5.134-4.273c1.634-1.284,3.325-2.541,5.021-3.708   l-3.982,15.07l13.813,27.244c2.567,5.066,0.535,11.277-4.53,13.844c-1.437,0.729-3.045,1.115-4.649,1.115H28.66   c-3.906,0-7.429-2.163-9.194-5.644l-3.351-6.61l-0.503,1.904c-1.069,2.414-1.398,5.179-0.739,7.945l9.966,41.816l-20.654,40.62   c-3.129,6.154-0.677,13.68,5.477,16.809c1.815,0.923,3.75,1.36,5.655,1.36c4.555,0,8.947-2.499,11.152-6.837l22.737-44.716   c1.344-2.644,1.705-5.679,1.018-8.563L43.71,120.64l27.592,32.534L58.989,192.06c-2.084,6.581,1.562,13.606,8.144,15.69   c1.255,0.397,2.526,0.586,3.777,0.586c5.304,0,10.227-3.403,11.914-8.729l14.4-45.474c1.298-4.1,0.397-8.579-2.384-11.858   l-26.36-31.081l12.227-46.276L94.533,81.496z\" />\n            <Path d=\"M68.523,44.861c12.35,1.391,23.486-7.492,24.877-19.841C94.79,12.671,85.909,1.534,73.559,0.143   C61.211-1.247,50.073,7.635,48.682,19.984C47.292,32.333,56.175,43.47,68.523,44.861z M86.53,28.268c0,0-9.51,19.901-24.158,3.146   C62.372,31.414,77.261,34.192,86.53,28.268z\" />\n            <Polygon points=\"140.38,50.191 141.753,51.328 150.106,30.865 145.071,28.212  \" />\n            <Polygon points=\"172.94,64.751 150.569,65.652 149.749,67.128 171.41,69.816  \" />\n            <Polygon points=\"168.57,48.316 167.124,43.228 148.778,56.061 148.885,57.746  \" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Circle, Path, Polygon } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const LearningSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 250.0183 192.0514\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M154.2761,86.2231c-1.6687,3.6694-5.3503,6.04-9.3811,6.04c-1.4746,0-2.9077-0.3113-4.2578-0.9253l-2.561-1.1639   l-21.9165,4.0112h17.854v0.0195h56.8848v-4.0039H161.04c0.7141-1.1969,1.2354-2.5177,1.2354-4.0137   c0-4.3518-3.4863-7.854-7.8088-7.9602C155.4419,80.7269,155.4712,83.5925,154.2761,86.2231z\" />\n            <Path d=\"M141.5723,69.6313l-4.1467-5.7849l-2.168,1.554l2.7844,3.8837c0.4504-0.0598,0.9033-0.1233,1.3574-0.1233   C140.1538,69.1608,140.8472,69.4708,141.5723,69.6313z\" />\n            <Polygon points=\"237.2681,192.0514 237.2681,111.7566 242.6855,111.7566 242.6855,102.923 250.0183,102.923 250.0183,97.923    121.5918,97.923 121.5918,102.923 128.9258,102.923 128.9258,111.7566 134.3408,111.7566 134.3408,192.0514 140.8423,192.0514    140.8423,179.881 230.769,179.881 230.769,192.0514  \" />\n            <Circle cx=\"105.249\" cy=\"22.5\" r=\"22.5\" />\n            <Path d=\"M51.3501,51.0583C41.3159,69.8364,37.71,82.547,36.6028,104.8846c0.4346,16.3965,11.0461,19.8438,20.105,21.2378   c2.854,0.4395,5.1746,0.6476,7.1301,0.379c0.3662,0.0323,0.6812,0.213,1.0547,0.213h29.0039l6.6602,50.5371   c0.8301,6.2939,6.2012,10.8691,12.373,10.8691c0.5469,0,1.0938-0.0342,1.6504-0.1074c6.8457-0.8984,11.6602-7.1777,10.7617-14.0234   l-8.0859-61.4062c-0.8203-6.2207-6.123-10.8691-12.3926-10.8691H72.8394c1.3953-7.3529,3.6426-14.7034,6.0693-21.5521   L62.1375,64.9158c-4.2029-3.8208-4.5129-10.3479-0.6934-14.5502c1.9482-2.1423,4.7278-3.3716,7.6233-3.3716   c2.5671,0,5.0269,0.9515,6.9275,2.6788l27.8284,25.2991L85.6543,43.5553c-0.5933-1.0254-1.3965-1.8329-2.3047-2.4774   c-1.0254-1.0907-2.1704-2.0496-3.5815-2.6624C71.698,34.9097,58.728,37.4451,51.3501,51.0583z\" />\n            <Path d=\"M74.4482,51.3751c-3.269-2.9718-8.3276-2.7325-11.3013,0.5377c-2.9724,3.269-2.7319,8.3289,0.5371,11.3007l32.0825,29.1669   c1.4868,1.3501,3.4082,2.0807,5.3833,2.0807c0.4785,0,0.9595-0.0427,1.4404-0.1306l35.7812-6.5485l3.2178,1.4618   c4.0234,1.8286,8.7646,0.05,10.5933-3.9722s0.0488-8.7653-3.9722-10.5933l-5.5005-2.5c-1.4868-0.6757-3.1445-0.8813-4.751-0.5865   l-34.3567,6.2872L74.4482,51.3751z\" />\n            <Path d=\"M23.2812,144.2584l-14.1797,45.542l3.8281,1.1914l14.1699-45.542c0.4492-1.4209,1.748-2.373,3.2324-2.373H76.25   c1.6602,0,3.0664,1.1865,3.3398,2.8271l7.4023,44.8193l3.9453-0.6543l-7.4023-44.8193c-0.4785-2.8772-2.5757-5.0458-5.2563-5.8142   l6.5747,0.0281l0.0195-5.9961l-54.4336-0.2344c-3.9648-0.0195-7.3926-2.5879-8.5254-6.3965L5.7422,72.403L0,74.1119   l16.1621,54.4287c1.8335,6.1877,7.3267,10.3473,13.7354,10.6018C26.8457,139.3256,24.2114,141.3025,23.2812,144.2584z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const LockedSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 37 37\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill=\"none\"\n        >\n            <Path\n                d=\"M26.0156 16.1875V10.9844C26.0156 6.83633 22.648 3.46875 18.5 3.46875C14.3447 3.46875 10.9844 6.83633 10.9844 10.9844V16.1875H6.9375V33.5312H30.0625V16.1875H26.0156ZM12.1406 10.9844C12.1406 7.47949 14.9951 4.625 18.5 4.625C22.0049 4.625 24.8594 7.47949 24.8594 10.9844V16.1875H12.1406V10.9844ZM28.9062 32.375H8.09375V17.3438H28.9062V32.375Z\"\n                fill={fill ?? '#000'}\n            />\n            <Path\n                d=\"M20.8125 23.125C20.8125 21.8459 19.7791 20.8125 18.5 20.8125C17.2209 20.8125 16.1875 21.8459 16.1875 23.125C16.1875 24.2018 16.9246 25.1051 17.9219 25.3652V28.3281C17.9219 28.6461 18.182 28.9062 18.5 28.9062C18.818 28.9062 19.0781 28.6461 19.0781 28.3281V25.3652C20.0754 25.1051 20.8125 24.2018 20.8125 23.125ZM18.5 24.2812C17.8641 24.2812 17.3438 23.7609 17.3438 23.125C17.3438 22.4891 17.8641 21.9688 18.5 21.9688C19.1359 21.9688 19.6562 22.4891 19.6562 23.125C19.6562 23.7609 19.1359 24.2812 18.5 24.2812Z\"\n                fill={fill ?? '#000'}\n            />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const PressSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 211.6236 237.1932\"\n            fill={fill ?? '#000'}\n            width={width ?? 100}\n            height={height ?? 100}\n        >\n            <Path d=\"M93.2118,109.7261c4.3225,4.6185,11.1853,4.5782,18.4473,4.5471c8.7732-0.0293,15.542,0.2344,16.9788,4.1406   c0.7812,2.1228,7.594,0.849,11.8018-1.4343l3.4302,7.7692c0.5127,1.1627,1.8848,1.6943,3.0481,1.181   c1.1633-0.5139,1.6956-1.886,1.1804-3.0487l-5.3357-12.0856c-0.0781-0.177-0.2759-0.2246-0.3894-0.3711   c-6.3525-12.1106-21.4673-12.1948-30.7935-12.1509c-1.5479,0.0085-3.5474,0.0171-5.188-0.0531   c1.5698-37.3553-14.9048-43.5419-20.1147-44.5666c-0.0403-0.0092-0.0696-0.0385-0.1099-0.047l-37.8674-7.6666   c-0.1599-0.0323-0.3088,0.022-0.4675,0c-1.4185-0.2985-2.8955-0.3528-4.353,0.1886L5.2467,60.1424   c-4.0137,1.4697-6.1621,5.8398-4.873,9.917l12.7734,40.5127c1.0742,3.4131,4.2285,5.5957,7.627,5.5957   c0.791,0,1.6016-0.1221,2.4023-0.3711c1.5173-0.4791,2.6733-1.4545,3.6206-2.5916l-1.1768,5.8093   c-0.1123,0.5548-0.0085,1.0852,0,1.629c-0.0806,0.5682-0.3369,1.0736-0.3369,1.6638v101.2189   c0,6.8304,5.5371,12.3633,12.3633,12.3633c6.8286,0,12.3657-5.5328,12.3657-12.3633v-91.6882l4.635,0.9381v90.7501   c0,6.8304,5.5371,12.3633,12.3633,12.3633c6.8274,0,12.3645-5.5328,12.3645-12.3633v-97.4268l9.5508-47.1716   c1.2598,4.8688,2.0117,11.8378,1.2878,21.9971C89.9745,104.28,91.0389,107.4062,93.2118,109.7261z M17.9322,72.535l18.4692-6.7719   l-8.0591,39.8083L17.9322,72.535z\" />\n            <Path d=\"M72.6417,44.5571c12.1802,2.4658,24.0503-5.4083,26.5161-17.5879c2.4658-12.1802-5.4077-24.0515-17.5879-26.5173   C69.3922-2.014,57.5184,5.8602,55.0526,18.0397S60.4615,42.0912,72.6417,44.5571z\" />\n            <Path d=\"M114.7975,133.9754l-24.873,24.4385c-0.0012,0.0012,0,0.0031,0,0.0043c-0.1807,0.1813-0.293,0.4315-0.293,0.7086v77.0654   c0,0.5518,0.4395,1.001,0.9961,1.001h95.1172c0.2637,0,0.5176-0.1025,0.7031-0.2881l24.8828-24.4385   c0.0012-0.0012,0-0.0037,0.0024-0.0049c0.0244-0.025,0.0183-0.069,0.0415-0.097c0.1465-0.1825,0.249-0.3912,0.249-0.6146v-77.0618   c0-0.0928-0.0745-0.1532-0.0977-0.2386c-0.0122-0.0507,0.0488-0.0934,0.0293-0.1422s-0.0928-0.0366-0.1196-0.0806   c-0.1709-0.3021-0.4321-0.5396-0.8081-0.5396h-95.127C115.2369,133.6873,114.983,133.7898,114.7975,133.9754z M91.6236,235.1912   v-75.0635h93.125v75.0635H91.6236z M209.6315,211.3283L186.7408,233.81v-74.2578l22.8906-22.4823V211.3283z M208.1861,135.6893   l-22.8516,22.4365H93.069l22.8418-22.4365H208.1861z\" />\n            <Path d=\"M149.358,155.0447c7.4121,0,13.2129-3.1836,13.2129-7.2461c0-0.9436-0.376-1.8243-0.9509-2.644   c0.1416-0.4102,0.4529-0.7837,0.4529-1.2183c0-3.7842-5.5859-6.7432-12.7148-6.7432s-12.7148,2.959-12.7148,6.7432   c0,0.4346,0.3113,0.8081,0.4529,1.2177c-0.575,0.8197-0.9509,1.701-0.9509,2.6447   C136.1451,151.8611,141.9459,155.0447,149.358,155.0447z M149.358,153.0428c-6.709,0-11.2207-2.71-11.2207-5.2441   c0-0.2032,0.2026-0.4016,0.26-0.6055c2.1521,2.0575,6.1218,3.4814,10.9607,3.4814s8.8086-1.4233,10.9607-3.4808   c0.0574,0.2039,0.26,0.4022,0.26,0.6049C160.5787,150.3328,156.067,153.0428,149.358,153.0428z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, {\n    Circle,\n    Defs,\n    Marker,\n    MarkerUnits,\n    Path,\n    Polygon,\n    SvgFromXml,\n} from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const StrongSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 159.9418 237.5544\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Circle cx=\"79.9714\" cy=\"23.0646\" r=\"22.5\" />\n            <Path d=\"M121.6257,64.4484l33.2656-13.1885c0.0176-0.0068,0.0332-0.0156,0.0498-0.0225c0.1162-0.0469,0.2266-0.1035,0.3389-0.1553   c0.1406-0.0645,0.2832-0.126,0.418-0.1982c0.0889-0.0469,0.1738-0.1016,0.2607-0.1523c0.1533-0.0889,0.3066-0.1777,0.4521-0.2754   c0.0684-0.0459,0.1338-0.0977,0.2012-0.1465c0.1543-0.1113,0.3076-0.2236,0.4531-0.3447c0.0625-0.0527,0.1201-0.1084,0.1807-0.1621   c0.1416-0.125,0.2803-0.252,0.4121-0.3867c0.0615-0.0635,0.1201-0.1299,0.1797-0.1953c0.1201-0.1318,0.2383-0.2646,0.3486-0.4043   c0.0625-0.0781,0.1221-0.1582,0.1816-0.2393c0.0977-0.1328,0.1934-0.2676,0.2832-0.4062c0.0605-0.0928,0.1172-0.1875,0.1738-0.2832   c0.0791-0.1348,0.1543-0.2705,0.2266-0.4102c0.0293-0.0566,0.0635-0.1094,0.0918-0.167c0.0234-0.0488,0.04-0.0996,0.0625-0.1484   c0.0635-0.1387,0.1221-0.2793,0.1777-0.4219c0.043-0.1084,0.0859-0.2168,0.123-0.3271c0.0508-0.1484,0.0947-0.2998,0.1367-0.4512   c0.0293-0.1045,0.0605-0.209,0.085-0.3145c0.04-0.1699,0.0693-0.3408,0.0986-0.5127c0.0146-0.0898,0.0332-0.1787,0.0449-0.2686   c0.0273-0.2031,0.042-0.4072,0.0537-0.6133c0.0029-0.0605,0.0107-0.1211,0.0127-0.1816c0.0078-0.25,0.0029-0.5029-0.0137-0.7549   c-0.001-0.0176,0-0.0342-0.001-0.0518c-0.0381-0.542-0.1309-1.0859-0.2842-1.625c-0.0254-0.0869-0.0605-0.1719-0.0879-0.2588   c-0.0547-0.1689-0.1055-0.3389-0.1719-0.5059c-0.002-0.0049-0.0049-0.0088-0.0068-0.0137   c-0.0029-0.0078-0.0049-0.0166-0.0078-0.0244c-2.2266-5.5332-14.085-33.4453-28.915-39.5098   c-4.3154-1.7666-8.7266-1.7686-12.7549-0.0098c-4.0488,1.7686-5.8955,6.4834-4.127,10.5322   c1.7578,4.0234,6.4297,5.873,10.459,4.1611c1.2041,0.1934,5.708,3.0781,12.2324,14.1523c1.7549,2.9795,3.3174,5.9717,4.5986,8.582   l-5.0752,1.4932c-10.2637-1.0391-17.7617,3.2598-21.292,5.8887c-9.4385-2.4775-14.8154,2.0088-17.2861,5.1357H62.737   c-2.4707-3.127-7.8477-7.6133-17.2861-5.1357c-3.5303-2.6289-11.0283-6.9277-21.292-5.8887l-5.0752-1.4932   c1.2812-2.6104,2.8438-5.6035,4.5986-8.582c6.5244-11.0742,11.0283-13.959,12.2324-14.1523   c4.0264,1.7129,8.7031-0.1338,10.4609-4.1602c1.7686-4.0488-0.0801-8.7646-4.1289-10.5332   c-4.0273-1.7598-8.4395-1.7568-12.7549,0.0098C14.6618,7.3917,2.8034,35.3038,0.5769,40.837   c-0.0029,0.0078-0.0049,0.0156-0.0078,0.0244c-0.002,0.0039-0.0049,0.0088-0.0068,0.0137   c-0.0664,0.167-0.1172,0.3369-0.1719,0.5059c-0.0273,0.0869-0.0625,0.1719-0.0879,0.2588c-0.1533,0.5391-0.2461,1.083-0.2842,1.625   c-0.001,0.0176,0,0.0352-0.001,0.0527c-0.0166,0.252-0.0215,0.5029-0.0137,0.7539c0.002,0.0615,0.0098,0.123,0.0137,0.1846   c0.0107,0.2041,0.0254,0.4082,0.0518,0.6104c0.0127,0.0898,0.0312,0.1787,0.0459,0.2686c0.0293,0.1719,0.0586,0.3428,0.0986,0.5127   c0.0244,0.1055,0.0557,0.21,0.085,0.3145c0.042,0.1514,0.0859,0.3027,0.1367,0.4512c0.0381,0.1104,0.0811,0.2188,0.123,0.3271   c0.0557,0.1426,0.1143,0.2832,0.1777,0.4219c0.0225,0.0488,0.0391,0.0996,0.0625,0.1484c0.0283,0.0576,0.0635,0.1104,0.0918,0.167   c0.0723,0.1396,0.1475,0.2754,0.2266,0.4102c0.0566,0.0957,0.1133,0.1904,0.1738,0.2832c0.0898,0.1387,0.1846,0.2734,0.2832,0.4062   c0.0596,0.0811,0.1191,0.1611,0.1816,0.2393c0.1104,0.1387,0.2285,0.2725,0.3486,0.4043c0.0596,0.0654,0.1182,0.1318,0.1797,0.1953   c0.1318,0.1348,0.2705,0.2617,0.4111,0.3867c0.0615,0.0537,0.1191,0.1094,0.1816,0.1621c0.1455,0.1211,0.2988,0.2334,0.4531,0.3447   c0.0674,0.0488,0.1328,0.1006,0.2012,0.1465c0.1455,0.0977,0.2988,0.1865,0.4521,0.2754C4.07,50.7824,4.155,50.837,4.2439,50.8839   c0.1348,0.0723,0.2773,0.1338,0.417,0.1982c0.1133,0.0518,0.2236,0.1084,0.3398,0.1553c0.0166,0.0068,0.0322,0.0156,0.0498,0.0225   l33.2656,13.1885c3.8037,5.7764,11.2725,18.0547,14.6084,29.9883v25.1592l-8.5293,104.5898   c-0.5547,6.8066,4.5137,12.7725,11.3184,13.3271s12.7734-4.5098,13.3281-11.3174l6.1279-75.1436l4.8018-8.9072l4.8008,8.9053   l6.1289,75.1455c0.5547,6.8076,6.5234,11.8721,13.3281,11.3174s11.873-6.5205,11.3184-13.3271l-8.5312-104.5908V94.4367   C110.3523,82.5031,117.822,70.2247,121.6257,64.4484z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Circle, Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const SuperheroSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 220 245.151\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M140.047,127.07l8.52,104.469c0.019,0.231,0.013,0.457,0.021,0.687C200.231,226.719,220,216.509,220,216.509   s-23-104.333-49.333-134.667c-5.417-6.239-10.461-10.596-14.833-13.64c-5.21,3.438-10.767,5.97-15.787,7.567V127.07z\" />\n            <Path d=\"M110.736,145.709h-1.471l-7.205,88.327c-0.016,0.201-0.053,0.395-0.077,0.593c2.616,0.139,5.284,0.267,8.017,0.38h0   c2.733-0.113,5.401-0.241,8.017-0.38c-0.024-0.198-0.061-0.393-0.077-0.594L110.736,145.709z\" />\n            <Path d=\"M49.333,81.842C23,112.176,0,216.509,0,216.509s19.769,10.21,71.412,15.717c0.008-0.229,0.002-0.456,0.021-0.687   l8.521-104.469V75.769c-5.02-1.596-10.578-4.128-15.788-7.566C59.795,71.246,54.75,75.603,49.333,81.842z\" />\n            <Circle cx=\"110\" cy=\"30.661\" r=\"22.5\" />\n            <Path d=\"M82.954,127.192l-8.53,104.591c-0.555,6.807,4.514,12.773,11.318,13.327c6.805,0.554,12.773-4.51,13.328-11.317   l7.429-91.083h7.002l7.428,91.083c0.555,6.808,6.523,11.872,13.328,11.317c6.805-0.555,11.873-6.52,11.318-13.327l-8.53-104.591   V73.528c11.665-3.184,27.271-11.921,33.229-25.947c4.115-9.687,5.177-25.362-13.137-45.031c-3.011-3.233-8.072-3.415-11.307-0.404   c-3.233,3.011-3.415,8.073-0.404,11.306c10.007,10.749,13.412,20.126,10.121,27.873c-4.633,10.906-20.856,17.042-26.559,17.536   h-11.886L110,65.963l-7.103-7.103H91.011c-5.703-0.494-21.927-6.63-26.56-17.536C61.16,33.578,64.565,24.2,74.572,13.452   c3.011-3.233,2.83-8.295-0.404-11.306c-3.233-3.011-8.295-2.831-11.307,0.404C44.549,22.219,45.609,37.894,49.724,47.581   c5.959,14.026,21.565,22.764,33.23,25.947V127.192z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const WaitingSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 354.522 463.62\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill=\"none\"\n        >\n            <Path\n                d=\"M 82.8818 97.304C 109.752 97.304 131.533 75.52 131.533 48.653C 131.533 21.784 109.752 0 82.8818 0C 56.0118 0 34.2288 21.784 34.2288 48.653C 34.2288 75.52 56.0118 97.304 82.8818 97.304z\"\n                id=\"Path1788\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 82.8818 48.653\"\n                id=\"Path1790\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 45.9178 156.487C 37.1678 100.487 117.918 83.487 130.918 140.737L 152.918 250.414L 234.995 250.584C 258.958 250.584 271.418 269.754 271.418 287.487L 271.418 436.607C 271.418 472.817 219.856 472.647 219.856 435.958C 219.856 401.931 219.856 319.906 219.856 319.906L 115.027 319.906C 90.5848 319.906 75.2488 303.132 71.4148 283.962L 45.9178 156.487z\"\n                id=\"Path1792\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 181.418 329.704C 208.651 329.704 208.524 369.987 181.794 369.987L 106.515 369.987C 69.9178 369.987 33.4178 342.487 23.8698 299.987L 0.417816 185.987C -4.33517 160.104 32.9178 151.487 38.4178 177.987L 60.6578 287.05C 66.8878 314.847 87.4958 329.704 112.417 329.704L 181.418 329.704z\"\n                id=\"Path1794\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 283.257 81.519L 319.465 63.972C 324.684 61.623 321.291 54.055 315.81 56.483L 285.045 70.338L 285.045 33.936C 285.045 28.22 276.408 28.482 276.408 33.936L 276.538 77.54C 276.538 80.8 280.061 83.149 283.257 81.519z\"\n                id=\"Path1798\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 283.399 144.281C 322.68 144.281 354.522 112.437 354.522 73.156C 354.522 33.876 322.68 2.032 283.399 2.032C 244.118 2.032 212.274 33.876 212.274 73.156C 212.274 112.437 244.118 144.281 283.399 144.281z\"\n                id=\"Path1802\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 283.399 73.156\"\n                id=\"Path1804\"\n                stroke=\"none\"\n                fill={fill}\n            />\n            <Path\n                d=\"M 283.399 132.201C 316.008 132.201 342.443 105.764 342.443 73.156C 342.443 40.546 316.008 14.111 283.399 14.111C 250.791 14.111 224.354 40.546 224.354 73.156C 224.354 105.764 250.791 132.201 283.399 132.201z\"\n                id=\"Path1808\"\n                stroke=\"none\"\n                fill=\"#fff\"\n            />\n            <Path\n                d=\"M 283.399 73.156\"\n                id=\"Path1810\"\n                stroke=\"none\"\n                fill=\"#fff\"\n            />\n            <Path\n                d=\"M 283.257 81.519L 319.465 63.972C 324.684 61.623 321.291 54.055 315.81 56.483L 285.045 70.338L 285.045 33.936C 285.045 28.22 276.408 28.482 276.408 33.936L 276.538 77.54C 276.538 80.8 280.061 83.149 283.257 81.519z\"\n                id=\"Path1812\"\n                stroke=\"none\"\n                fill={fill}\n            />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from './SvgPropsInterface';\n\nexport const WrongTapSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 151.3884 285.3559\"\n            width={width ?? 100}\n            height={height ?? 100}\n            fill={fill}\n        >\n            <Path d=\"M66.0281,48.1733c-12.4257,0-22.5,10.0732-22.5,22.5c0,12.4267,10.0743,22.5,22.5,22.5c12.4278,0,22.5-10.0733,22.5-22.5   C88.5281,58.2465,78.4559,48.1733,66.0281,48.1733z M75.9506,80.1349c-7.8311-5.5518-19.2427,0.2676-19.3564,0.3271l-1.3882-2.6592   c0.5322-0.2783,13.1392-6.7363,22.48-0.1152L75.9506,80.1349z\" />\n            <Path d=\"M128.0331,126.4992c-0.3145-0.2686-7.7915-6.6475-16.3594-13.1348c-14.2244-10.7704-20.6469-13.6706-24.6492-14.305   c-0.5408-0.1199-1.101-0.1879-1.6779-0.1879H46.7117c-0.2693,0-0.5352,0.0141-0.7974,0.041   c-0.4193,0.0074-0.842,0.0382-1.2678,0.1143c-3.9277,0.6982-9.0508,3.2549-19.8525,17.1064   c-0.0674,0.0869-0.1357,0.1738-0.2031,0.2607L15.6362,86.652l-2.7054-15.9123c-0.2334-1.3729-1.5477-2.3053-2.9207-2.0718H10.01   c-1.3729,0.2335-2.3052,1.5477-2.0718,2.9207l2.1581,12.6931c-4.7636,0.5717-10.843,3.456-10.021,6.1845l13.8721,46.0732   c0.8945,2.9727,3.4287,5.1582,6.501,5.6084c0.3877,0.0566,0.7754,0.085,1.1611,0.085c2.6611,0,5.1816-1.3311,6.6758-3.5938   c3.4437-5.2178,7.2668-10.406,10.6981-14.6438v32.0579v18.9395v98c0,6.8301,5.5371,12.3633,12.3633,12.3633   c6.8281,0,12.3652-5.5332,12.3652-12.3633v-90.2715h4.6348v90.2715c0,6.8301,5.5371,12.3633,12.3633,12.3633   c6.8281,0,12.3652-5.5332,12.3652-12.3633v-97.9988c0-0.0004,0.0001-0.0008,0.0001-0.0012v-0.6778   c2.1447-0.0498,4.2639-0.9498,5.7998-2.6808l29.9448-33.7432c1.4258-1.6064,2.1455-3.7178,1.9976-5.8613   C130.6693,129.8869,129.6659,127.8937,128.0331,126.4992z M93.0751,154.0654v-34.3856   c5.2355,3.5367,11.9067,8.5794,18.2964,13.7677L93.0751,154.0654z\" />\n            <Path d=\"M7.7031,62.2054c-2.7698,1.0098-3.981,3.7063-4.0314,3.8205c-0.2214,0.504,0.0073,1.0903,0.5105,1.3141   c0.0343,0.0154,0.0691,0.0286,0.1042,0.0397c0.478,0.1517,1.0046-0.0778,1.2149-0.5458c0.009-0.0202,0.9393-2.0486,2.9032-2.7553   c1.2574-0.4529,2.7134-0.2804,4.3256,0.515c0.4946,0.243,1.0948,0.0401,1.3391-0.4551c0.2441-0.4958,0.04-1.0948-0.4554-1.3392   C11.485,61.7509,9.4968,61.5508,7.7031,62.2054z\" />\n            <Path d=\"M15.5703,59.9802c0.2629-0.4857,0.0822-1.0922-0.4034-1.3554c-3.1094-1.6818-6.0465-2.1088-8.7315-1.2672   c-4.0865,1.2805-6.0238,5.0406-6.1045,5.2004c-0.2483,0.4919-0.0508,1.0909,0.4406,1.3406c0.0495,0.025,0.1,0.0456,0.1512,0.0618   c0.4577,0.1453,0.9669-0.0579,1.1926-0.499c0.0162-0.0317,1.6612-3.1848,4.9368-4.2012c2.1452-0.6661,4.5546-0.2898,7.1625,1.1238   C14.7024,60.6448,15.3074,60.4655,15.5703,59.9802z\" />\n            <Path d=\"M123.315,0c-15.5045,0-28.0734,12.5689-28.0734,28.0734c0,6.2123,2.0216,11.9504,5.4376,16.6004l-10.54,13.7605   l14.5164-9.3929c4.9604,4.4174,11.4946,7.1054,18.6594,7.1054c15.5045,0,28.0734-12.5688,28.0734-28.0734S138.8195,0,123.315,0z    M136.4772,38.4549l-2.7808,2.7808L123.315,30.8542l-10.3815,10.3815l-2.7808-2.7808l10.3815-10.3815L110.1528,17.692   l2.7808-2.7808l10.3815,10.3815l10.3815-10.3815l2.7808,2.7808l-10.3815,10.3815L136.4772,38.4549z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport { BlockSvg } from '../../../Icons/AchievementIcon/BlockSvg';\nimport { ClickFilledSvg } from '../../../Icons/AchievementIcon/ClickFilledSvg';\nimport { ClickSvg } from '../../../Icons/AchievementIcon/ClickSvg';\nimport { FingersBrokenSvg } from '../../../Icons/AchievementIcon/FingersBrokenSvg';\nimport { HighFiveSvg } from '../../../Icons/AchievementIcon/HighFiveSvg';\nimport { LearningSvg } from '../../../Icons/AchievementIcon/LearningSvg';\nimport { LockedSvg } from '../../../Icons/AchievementIcon/LockedSvg';\nimport { PressSvg } from '../../../Icons/AchievementIcon/PressSvg';\nimport { StrongSvg } from '../../../Icons/AchievementIcon/StrongSvg';\nimport { SuperheroSvg } from '../../../Icons/AchievementIcon/SuperheroSvg';\nimport { WaitingSvg } from '../../../Icons/AchievementIcon/WaitingSvg';\nimport { WrongTapSvg } from '../../../Icons/AchievementIcon/WrongTapSvg';\nimport { Achievement } from '../../../services/Game/Achievements/Achievement';\n\ninterface IProps {\n    achievement: Achievement;\n}\n\nconst ACHIEVEMENTS_COLORS: { [key: string]: string } = {\n    'PRESS:1': '#515151',\n    'PRESS:5': '#515151',\n    'PRESS:20': '#02B788',\n    'PRESS:100': '#02B788',\n    'PRESS:500': '#515151',\n\n    'PENALTY:1': '#FF99C8',\n    'PENALTY:5': '#E71D36',\n    'PENALTY:20': '#E71D36',\n    'PENALTY:100': '#E71D36',\n    'PENALTY:500': '#E71D36',\n};\n\nconst getColorById = (achievementId: string) => {\n    return ACHIEVEMENTS_COLORS[achievementId] ?? '#000';\n};\n\nexport const AchievementIcon: FC<IProps> = ({ achievement }) => {\n    const width = 35;\n    const height = 35;\n    const isLocked = achievement.unlockTs < 0;\n    const fill = getColorById(achievement.id);\n    if (isLocked) {\n        return <LockedSvg width={width} height={height} />;\n    }\n\n    switch (achievement.id) {\n        case 'PRESS:1':\n            return <PressSvg width={width} height={height} fill={fill} />;\n        case 'PRESS:5':\n            return <HighFiveSvg width={width} height={height} fill={fill} />;\n        case 'PRESS:20':\n            return <ClickSvg width={width} height={height} fill={fill} />;\n        case 'PRESS:100':\n            return <StrongSvg width={width} height={height} fill={fill} />;\n        case 'PRESS:500':\n            return (\n                <FingersBrokenSvg width={width} height={height} fill={fill} />\n            );\n\n        case 'PENALTY:1':\n            return <WrongTapSvg width={width} height={height} fill={fill} />;\n        case 'PENALTY:5':\n            return <WaitingSvg width={width} height={height} fill={fill} />;\n        case 'PENALTY:20':\n            return <LearningSvg width={width} height={height} fill={fill} />;\n        case 'PENALTY:100':\n            return <SuperheroSvg width={width} height={height} fill={fill} />;\n    }\n\n    return <BlockSvg width={width} height={height} fill={fill} />;\n};\n","import { FC } from 'react';\nimport { Text } from 'react-native';\nimport { BlockSvg } from '../../../Icons/AchievementIcon/BlockSvg';\nimport { ClickSvg } from '../../../Icons/AchievementIcon/ClickSvg';\nimport { LockedSvg } from '../../../Icons/AchievementIcon/LockedSvg';\nimport { Achievement } from '../../../services/Game/Achievements/Achievement';\n\ninterface IProps {\n    achievement: Achievement;\n}\n\nexport const AchievementTitle: FC<IProps> = ({ achievement }) => {\n    let title = achievement.title;\n    if (achievement.hidden && achievement.isLocked()) {\n        title = '???';\n    }\n    return (\n        <Text\n            style={{\n                color: achievement.isLocked() ? '#ebb429' : '#4a4e69',\n                fontFamily: 'Primary',\n                fontSize: 16,\n            }}\n        >\n            {title}\n        </Text>\n    );\n};\n","import { FC } from 'react';\nimport { Text, View } from 'react-native';\nimport { ClickSvg } from '../../Icons/AchievementIcon/ClickSvg';\nimport { LockedSvg } from '../../Icons/AchievementIcon/LockedSvg';\nimport { Achievement } from '../../services/Game/Achievements/Achievement';\nimport { AchievementIcon } from './AchievementItem/AchievementIcon';\nimport { AchievementTitle } from './AchievementItem/AchievementTitle';\n\ninterface IProps {\n    achievement: Achievement;\n}\n\nconst colorsConfig = {\n    locked: {\n        badgeBg: '#rgba(252, 246, 189, 0.4)',\n        borderColor: '#ffd773',\n        titleColor: '#ebb429',\n        descriptionColor: '#FFC736',\n    },\n    unlocked: {\n        badgeBg: '#FCF6BD',\n        borderColor: '#FFC736',\n        titleColor: '#4a4e69',\n        descriptionColor: '#4a4e69',\n    },\n};\n\nexport const AchievementItem: FC<IProps> = ({ achievement }) => {\n    const isLocked = achievement.unlockTs < 0;\n    const colors = isLocked ? colorsConfig.locked : colorsConfig.unlocked;\n    return (\n        <View\n            style={{\n                borderColor: colors.borderColor,\n                borderWidth: 1,\n                borderRadius: 10,\n                backgroundColor: colors.badgeBg,\n                flexDirection: 'row',\n                padding: 10,\n                marginBottom: 10,\n                alignItems: 'flex-start',\n                opacity: isLocked ? 0.7 : 1,\n            }}\n        >\n            <View\n                style={{\n                    backgroundColor: '#fff',\n                    borderColor: colors.borderColor,\n                    borderWidth: 1,\n                    borderRadius: 50,\n                    padding: 10,\n                    opacity: isLocked ? 0.4 : 1,\n                }}\n            >\n                <AchievementIcon achievement={achievement} />\n            </View>\n\n            <View\n                style={{\n                    marginLeft: 10,\n                    flex: 1,\n                }}\n            >\n                <View style={{ paddingTop: achievement.isLocked() ? 10 : 0 }}>\n                    <AchievementTitle achievement={achievement} />\n                </View>\n                {!isLocked && (\n                    <Text\n                        style={{\n                            color: colors.descriptionColor,\n                            fontFamily: 'PrimaryLight',\n                            fontSize: 14,\n                        }}\n                    >\n                        {achievement.description}\n                    </Text>\n                )}\n            </View>\n        </View>\n    );\n};\n","import { FC } from 'react';\nimport { Pressable, Text, View } from 'react-native';\nimport { Achievement } from '../../services/Game/Achievements/Achievement';\n\ninterface IProps {\n    achievements: Achievement[];\n    onClose: CallableFunction;\n}\nexport const AchievementsHeader: FC<IProps> = ({ achievements, onClose }) => {\n    return (\n        <View\n            style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                paddingTop: 20,\n                paddingBottom: 20,\n                backgroundColor: '#fff',\n                zIndex: 100,\n                alignItems: 'center',\n            }}\n        >\n            <Pressable\n                onPress={() => {\n                    onClose();\n                }}\n            >\n                <Text>Close</Text>\n            </Pressable>\n        </View>\n    );\n};\n","import { FC } from 'react';\nimport { ScrollView, View } from 'react-native';\nimport { Game } from '../services/Game';\nimport { AchievementItem } from './Achievements/AchievementItem';\nimport { AchievementsHeader } from './Achievements/Header';\n\ninterface IProps {\n    onClose: CallableFunction;\n}\n\nexport const AchievementsScene: FC<IProps> = ({ onClose }) => {\n    const achievements = Game.achievements.getAll();\n    return (\n        <View\n            style={{\n                position: 'absolute',\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n                backgroundColor: '#fff',\n                padding: 20,\n            }}\n        >\n            <AchievementsHeader achievements={achievements} onClose={onClose} />\n            <ScrollView\n                style={{ marginTop: 70 }}\n                showsVerticalScrollIndicator={false}\n            >\n                {achievements.map((achievement) => (\n                    <AchievementItem\n                        achievement={achievement}\n                        key={achievement.id}\n                    />\n                ))}\n            </ScrollView>\n        </View>\n    );\n};\n","import { Sound } from 'expo-av/build/Audio';\nimport { FC, useRef } from 'react';\nimport { Animated, Pressable, Text, View } from 'react-native';\nimport { Game } from '../services/Game';\n\ninterface IProps {\n    text: string;\n    backgroundColor: string;\n    shadowColor: string;\n    textColor: string;\n    onPress: CallableFunction;\n    shadowHeight?: number;\n    disabled?: boolean;\n    sound?: string;\n}\n/**\n * Press animation happens from growing outer container margin top at the same time as reducing shadow container's\n * padding bottom\n */\nexport const BasicButtonComponent: FC<IProps> = ({\n    text,\n    backgroundColor,\n    shadowColor,\n    textColor,\n    onPress,\n    shadowHeight,\n    disabled,\n    sound,\n}) => {\n    const SHADOW_HEIGHT = shadowHeight ?? 5;\n    const PRESS_DURATION = 75;\n    const RELEASE_DURATION = 120;\n    const marginHeight = useRef(new Animated.Value(0)).current;\n    const paddingHeight = useRef(new Animated.Value(SHADOW_HEIGHT)).current;\n\n    const containerPaddingLeft = useRef(new Animated.Value(0)).current;\n    const containerPaddingRight = useRef(new Animated.Value(0)).current;\n\n    // UIs\n    const borderRadius = 15;\n    const padding = {\n        paddingRight: 70,\n        paddingLeft: 70,\n        paddingTop: 20,\n        paddingBottom: 20,\n    };\n\n    const denyPressPadding = 20;\n    const denyPressAnimationTickMs = 30;\n\n    return (\n        // outer container\n        <Animated.View\n            style={{\n                flexDirection: 'row',\n                marginTop: marginHeight,\n                paddingRight: containerPaddingRight,\n                paddingLeft: containerPaddingLeft,\n            }}\n        >\n            <Pressable\n                onPress={() => {\n                    if (sound) {\n                        Game.sounds.play(sound);\n                    }\n\n                    if (disabled) {\n                        Animated.sequence([\n                            Animated.timing(containerPaddingLeft, {\n                                useNativeDriver: false,\n                                toValue: denyPressPadding,\n                                duration: denyPressAnimationTickMs,\n                            }),\n                            Animated.timing(containerPaddingLeft, {\n                                useNativeDriver: false,\n                                toValue: 0,\n                                duration: denyPressAnimationTickMs,\n                            }),\n                            Animated.timing(containerPaddingRight, {\n                                useNativeDriver: false,\n                                toValue: denyPressPadding,\n                                duration: denyPressAnimationTickMs,\n                            }),\n                            Animated.timing(containerPaddingRight, {\n                                useNativeDriver: false,\n                                toValue: 0,\n                                duration: denyPressAnimationTickMs,\n                            }),\n                            Animated.timing(containerPaddingLeft, {\n                                useNativeDriver: false,\n                                toValue: denyPressPadding,\n                                duration: denyPressAnimationTickMs,\n                            }),\n                            Animated.timing(containerPaddingLeft, {\n                                useNativeDriver: false,\n                                toValue: 0,\n                                duration: denyPressAnimationTickMs,\n                            }),\n                        ]).start(() => {\n                            onPress();\n                        });\n                        return;\n                    }\n                    Animated.parallel([\n                        Animated.sequence([\n                            Animated.timing(paddingHeight, {\n                                useNativeDriver: false,\n                                toValue: 0,\n                                duration: PRESS_DURATION,\n                            }),\n                            Animated.timing(paddingHeight, {\n                                useNativeDriver: false,\n                                toValue: SHADOW_HEIGHT,\n                                duration: RELEASE_DURATION,\n                            }),\n                        ]),\n                        Animated.sequence([\n                            Animated.timing(marginHeight, {\n                                useNativeDriver: false,\n                                toValue: SHADOW_HEIGHT,\n                                duration: PRESS_DURATION,\n                            }),\n                            Animated.timing(marginHeight, {\n                                useNativeDriver: false,\n                                toValue: 0,\n                                duration: RELEASE_DURATION,\n                            }),\n                        ]),\n                    ]).start(() => {\n                        onPress();\n                    });\n                }}\n            >\n                {/* Button shadow container of shadowColor */}\n                <Animated.View\n                    style={{\n                        backgroundColor: shadowColor,\n                        borderRadius: borderRadius,\n                        paddingBottom: paddingHeight,\n                    }}\n                >\n                    {/* Button container of backgroundColor*/}\n                    <View\n                        style={{\n                            backgroundColor,\n                            borderRadius: borderRadius,\n                            justifyContent: 'center',\n                            flexDirection: 'row',\n                            ...padding,\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color: textColor,\n                                fontSize: 24,\n                                fontFamily: 'Primary',\n                            }}\n                            selectable={false}\n                        >\n                            {text}\n                        </Text>\n                    </View>\n                </Animated.View>\n            </Pressable>\n        </Animated.View>\n    );\n};\n","import { Sound } from 'expo-av/build/Audio';\nimport { FC } from 'react';\nimport { BasicButtonComponent } from '../BasicButton';\n\ninterface IProps {\n    text: string;\n    onPress: CallableFunction;\n    shadowHeight?: number;\n    disabled?: boolean;\n    sound?: string;\n}\n\nexport const GreenButton: FC<IProps> = ({\n    text,\n    onPress,\n    shadowHeight,\n    disabled,\n    sound,\n}) => {\n    return (\n        <BasicButtonComponent\n            text={text}\n            textColor=\"#fff\"\n            shadowColor=\"#02B788\"\n            backgroundColor=\"#06D6A0\"\n            shadowHeight={shadowHeight}\n            onPress={onPress}\n            disabled={disabled}\n            sound={sound}\n        />\n    );\n};\n","import { Sound } from 'expo-av/build/Audio';\nimport { FC } from 'react';\nimport { BasicButtonComponent } from '../BasicButton';\n\ninterface IProps {\n    text: string;\n    onPress: CallableFunction;\n    shadowHeight?: number;\n    disabled?: boolean;\n    sound?: string;\n}\n\nexport const RedButton: FC<IProps> = ({\n    text,\n    onPress,\n    shadowHeight,\n    disabled,\n    sound,\n}) => {\n    return (\n        <BasicButtonComponent\n            text={text}\n            textColor=\"#fff\"\n            shadowColor=\"#DE0261\"\n            backgroundColor=\"#FF006E\"\n            shadowHeight={shadowHeight}\n            onPress={onPress}\n            disabled={disabled}\n            sound={sound}\n        />\n    );\n};\n","import { useEffect, useLayoutEffect } from 'react';\n\n// https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nconst useIsomorphicLayoutEffect =\n    typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","// https://usehooks-ts.com/react-hook/use-interval\n\nimport { useEffect, useRef } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\n\nexport const useInterval = (callback: () => void, delay: number | null) => {\n    const savedCallback = useRef(callback);\n\n    // Remember the latest callback if it changes.\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        // Don't schedule if no delay is specified.\n        // Note: 0 is a valid value for delay.\n        if (!delay && delay !== 0) {\n            return;\n        }\n\n        const id = setInterval(() => savedCallback.current(), delay);\n\n        return () => clearInterval(id);\n    }, [delay]);\n};\n","import { FC, useState } from 'react';\nimport { Text } from 'react-native';\nimport { useInterval } from '../../hooks/useInterval';\n\ninterface IProps {\n    endTime: number;\n    color: string;\n}\n\nconst padTo2Digits = (value: number) => {\n    return value.toString().padStart(2, '0');\n};\n\nconst msToTimer = (milliseconds: number): string => {\n    let seconds = Math.floor((milliseconds + 1000) / 1000);\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n\n    seconds = seconds % 60;\n    minutes = minutes % 60;\n    hours = hours % 24;\n\n    return `${padTo2Digits(hours)}:${padTo2Digits(minutes)}:${padTo2Digits(\n        seconds\n    )}`;\n};\n\nexport const CountDown: FC<IProps> = ({ endTime, color }) => {\n    const [remainingTime, setRemainingTime] = useState(endTime - Date.now());\n\n    useInterval(() => {\n        setRemainingTime(endTime - Date.now());\n    }, 500);\n\n    return (\n        <>\n            {remainingTime <= 0 && (\n                <Text style={{ textAlign: 'center', fontSize: 20 }}> </Text>\n            )}\n            {remainingTime > 0 && (\n                <Text\n                    style={{\n                        textAlign: 'center',\n                        fontSize: 20,\n                        color,\n                        fontFamily: 'Primary',\n                    }}\n                    selectable={false}\n                >\n                    {msToTimer(remainingTime)}\n                </Text>\n            )}\n        </>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Circle, Path } from 'react-native-svg';\nimport { ISVGProps } from '../../../Icons/AchievementIcon/SvgPropsInterface';\n\nexport const LockSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 48 48\"\n            fill={fill ?? '#000'}\n            width={width ?? 100}\n            height={height ?? 100}\n        >\n            <Circle cx=\"24\" cy=\"30\" r=\"2\" />\n            <Path d=\"M24,38c-0.553,0-1-0.447-1-1v-6c0-0.553,0.447-1,1-1s1,0.447,1,1v6C25,37.553,24.553,38,24,38z\" />\n            <Path d=\"M42,48H6V18h36V48z M8,46h32V20H8V46z\" />\n            <Path d=\"M36,19h-2v-7c0-5.514-4.486-10-10-10S14,6.486,14,12v7h-2v-7c0-6.617,5.383-12,12-12s12,5.383,12,12V19z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Path } from 'react-native-svg';\nimport { ISVGProps } from '../../../Icons/AchievementIcon/SvgPropsInterface';\n\nexport const ResetSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 512 512\"\n            fill={fill ?? '#000'}\n            width={width ?? 100}\n            height={height ?? 100}\n        >\n            <Path d=\"M337.2805176,65.1593628c-3.5307617-1.573246-7.6689453,0.0097656-9.2451172,3.5400391   c-1.5751953,3.5302734,0.0097656,7.6699219,3.5400391,9.2451172   c66.9814453,29.8876953,110.2617188,96.4863281,110.2617188,169.6679688   c0,102.4707031-83.3662109,185.8369141-185.8369141,185.8369141c-102.4711914,0-185.8374023-83.3662109-185.8374023-185.8369141   c0-73.1816406,43.2802734-139.7802734,110.2617188-169.6679688c3.5302734-1.5751953,5.1152344-5.7148438,3.5400391-9.2451172   c-1.5756836-3.5302734-5.7143555-5.1142616-9.2451172-3.5400391   C102.6989746,97.2960815,56.1628418,168.913269,56.1628418,247.6124878   c0,110.1904297,89.6464844,199.8369141,199.8374023,199.8369141c110.1904297,0,199.8369141-89.6464844,199.8369141-199.8369141   C455.8371582,168.913269,409.3010254,97.2960815,337.2805176,65.1593628z\" />\n            <Path d=\"M256.0002441,292.5646362c3.8662109,0,7-3.1337891,7-7V71.5519409c0-3.8662109-3.1337891-7-7-7s-7,3.1337891-7,7   v214.0126953C249.0002441,289.4308472,252.1340332,292.5646362,256.0002441,292.5646362z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport Svg, { Circle, Path } from 'react-native-svg';\nimport { ISVGProps } from '../../../Icons/AchievementIcon/SvgPropsInterface';\n\nexport const UnlockSvg: FC<ISVGProps> = ({ fill, width, height }) => {\n    return (\n        <Svg\n            viewBox=\"0 0 48 48\"\n            fill={fill ?? '#000'}\n            width={width ?? 100}\n            height={height ?? 100}\n        >\n            <Circle cx=\"24\" cy=\"30\" r=\"2\" />\n            <Path d=\"M24,38c-0.553,0-1-0.447-1-1v-6c0-0.553,0.447-1,1-1s1,0.447,1,1v6C25,37.553,24.553,38,24,38z\" />\n            <Path d=\"M42,48H6V18h36V48z M8,46h32V20H8V46z\" />\n            <Path d=\"M36,19h-2v-7c0-5.514-4.486-10-10-10S14,6.486,14,12h-2c0-6.617,5.383-12,12-12s12,5.383,12,12V19z\" />\n        </Svg>\n    );\n};\n","import { FC } from 'react';\nimport { Pressable, Text, View } from 'react-native';\nimport { Game } from '../../services/Game';\nimport { LockSvg } from './DebugPanel/LockSvg';\nimport { ResetSvg } from './DebugPanel/ResetSvg';\nimport { UnlockSvg } from './DebugPanel/UnlockSvg';\n\ninterface IProps {\n    reset: CallableFunction;\n}\n\nexport const DebugPanel: FC<IProps> = ({ reset }) => {\n    return (\n        <View style={{ marginTop: 20, flexDirection: 'row' }}>\n            <View style={{ marginRight: 50 }}>\n                <Pressable\n                    onPress={() => {\n                        reset();\n                    }}\n                >\n                    <ResetSvg width={50} height={50} />\n                </Pressable>\n            </View>\n            <View style={{ marginRight: 50 }}>\n                <Pressable\n                    onPress={() => {\n                        Game.achievements.unlockAll();\n                    }}\n                >\n                    <UnlockSvg width={50} height={50} />\n                </Pressable>\n            </View>\n\n            <View>\n                <Pressable\n                    onPress={() => {\n                        Game.achievements.lockAll();\n                    }}\n                >\n                    <LockSvg width={50} height={50} />\n                </Pressable>\n            </View>\n        </View>\n    );\n};\n","import React, { FC } from 'react';\nimport { Text, View } from 'react-native';\n\ninterface IProps {\n    score: number;\n}\n\nexport interface ScoreItemDto {\n    key: number;\n    value: number;\n    order: number;\n}\n\nconst _GameScore: FC<IProps> = ({ score }) => {\n    return (\n        <View style={{ alignItems: 'center' }}>\n            <Text\n                selectable={false}\n                style={{\n                    color: 'rgb(74,78,105)',\n                    fontFamily: 'PrimaryLight',\n                    fontSize: 72,\n                }}\n            >\n                {score}\n            </Text>\n        </View>\n    );\n};\n\nexport const GameScore = React.memo(_GameScore);\n","import { FC, useRef, useState } from 'react';\nimport { Animated, Text, View } from 'react-native';\nimport { GreenButton } from '../basic-components/Buttons/GreenButton';\nimport { RedButton } from '../basic-components/Buttons/RedButton';\nimport { useInterval } from '../hooks/useInterval';\nimport { EventsFactory } from '../services/EventsFactory';\nimport { Game } from '../services/Game';\nimport { Quotes } from '../services/Game/Quotes';\nimport { Sounds } from '../services/Sounds';\nimport { CountDown } from './Play/CountDown';\nimport { DebugPanel } from './Play/DebugPanel';\nimport { GameScore } from './Play/Score';\n\nexport const PlayScene: FC = () => {\n    const buttonController = Game.controller;\n    const [counter, setCounter] = useState(buttonController.getCounter());\n    const [canRenderPenaltyAnimation, setCanRenderPenaltyAnimation] =\n        useState(true);\n    const [disabled, setDisabled] = useState(\n        Game.clock.now() <= buttonController.getNextPressTimeFrameStart()\n    );\n\n    const penaltyTimeOpacity = useRef(new Animated.Value(0)).current;\n    const penaltyTimeAnimation = Animated.sequence([\n        Animated.timing(penaltyTimeOpacity, {\n            useNativeDriver: false,\n            toValue: 1,\n            duration: 10,\n        }),\n        Animated.timing(penaltyTimeOpacity, {\n            useNativeDriver: false,\n            toValue: 0,\n            duration: 500,\n        }),\n    ]);\n\n    const pressHandle = () => {\n        buttonController.buttonPressedOnTime();\n        setCounter(buttonController.getCounter());\n        setDisabled(true);\n        Game.events.emit(EventsFactory.userTap(Game.clock.now()));\n    };\n\n    const penaltyHandler = () => {\n        Game.events.emit(EventsFactory.userTapPenalty(Game.clock.now()));\n        buttonController.buttonPressedTooEarly();\n        if (canRenderPenaltyAnimation) {\n            setCanRenderPenaltyAnimation(false);\n            penaltyTimeAnimation.start(() => {\n                setCanRenderPenaltyAnimation(true);\n            });\n        }\n    };\n\n    const reset = () => {\n        buttonController.resetButton();\n        setCounter(buttonController.getCounter());\n        setDisabled(false);\n    };\n\n    useInterval(() => {\n        if (buttonController.isButtonExpired()) {\n            buttonController.resetButton();\n            setCounter(buttonController.getCounter());\n        }\n        setDisabled(\n            Game.clock.now() <= buttonController.getNextPressTimeFrameStart()\n        );\n    }, 400);\n\n    return (\n        <View>\n            <View style={{ alignItems: 'center' }}>\n                <GameScore score={counter} />\n\n                {disabled && (\n                    <RedButton\n                        text={`DO NOT PRESS`}\n                        onPress={penaltyHandler}\n                        shadowHeight={15}\n                        disabled={disabled}\n                        sound={Sounds.SOUND_BUTTON_PENALTY}\n                    />\n                )}\n                {!disabled && (\n                    <GreenButton\n                        text={`PRESS ME`}\n                        onPress={pressHandle}\n                        shadowHeight={15}\n                        disabled={disabled}\n                        sound={Sounds.SOUND_BUTTON_PRESS}\n                    />\n                )}\n                {disabled && (\n                    <View style={{ paddingTop: 20 }}>\n                        <CountDown\n                            color=\"#DE0261\"\n                            endTime={buttonController.getNextPressTimeFrameStart()}\n                        />\n                        <Animated.View\n                            style={{\n                                position: 'absolute',\n                                right: -40,\n                                top: 20,\n                                opacity: penaltyTimeOpacity,\n                            }}\n                        >\n                            <Text\n                                style={{ color: '#FF006E', fontWeight: 'bold' }}\n                            >\n                                +\n                                {Math.floor(\n                                    Game.controller.getPenaltyTime() / 1000\n                                )}\n                            </Text>\n                        </Animated.View>\n                    </View>\n                )}\n\n                {!disabled && (\n                    <View style={{ paddingTop: 20 }}>\n                        <CountDown\n                            color=\"#02B788\"\n                            endTime={buttonController.getNextPressTimeFrameEnd()}\n                        />\n                    </View>\n                )}\n\n                {Game.debug && <DebugPanel reset={reset} />}\n            </View>\n        </View>\n    );\n};\n","import { IAppClock } from './AppClockInterface';\n\nexport class SystemClock implements IAppClock {\n    public now() {\n        return Date.now();\n    }\n}\n","import { IAppStorage } from './AppStorageInterface';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { IEncrypt } from './Encryption/IEncrypt';\n\nexport class DeviceStorage implements IAppStorage {\n    constructor(private readonly encrypt: IEncrypt) {}\n\n    private getKey(key: string): string {\n        return this.encrypt.hash(key);\n    }\n\n    async set(key: string, item: string): Promise<void> {\n        await AsyncStorage.setItem(\n            this.getKey(key),\n            this.encrypt.encrypt(item)\n        );\n    }\n    async get(key: string): Promise<any> {\n        const value = await AsyncStorage.getItem(this.getKey(key));\n        if (!value) {\n            return null;\n        }\n\n        const decrypted = this.encrypt.decrypt(value);\n        return decrypted;\n    }\n\n    async delete(key: string): Promise<void> {\n        await AsyncStorage.removeItem(this.getKey(key));\n    }\n}\n","import { IEncrypt } from './IEncrypt';\nimport CryptoJS from 'crypto-js';\n\nexport class DefaultEncrypt implements IEncrypt {\n    private secret: string = '';\n\n    constructor() {\n        const a =\n            '2LrK9fHw3je3GNNTmyh3TJarwi4BmsgmaL3ji51w30sah37YGXTFqqy7HPYyJQWVzzJ3Zw';\n        this.secret =\n            a.substring(10, 20) +\n            a.substring(0, 10) +\n            a.substring(30, 40) +\n            a.substring(60, 70) +\n            a.substring(50, 60);\n    }\n\n    encrypt(data: string): string {\n        return CryptoJS.AES.encrypt(data, this.secret).toString();\n        // return data;\n    }\n    decrypt(data: string): string {\n        return CryptoJS.AES.decrypt(data, this.secret).toString(\n            CryptoJS.enc.Utf8\n        );\n    }\n    hash(data: string): string {\n        return CryptoJS.MD5(`${data}:${this.secret}`).toString();\n    }\n}\n","import { IEncrypt } from './IEncrypt';\n\nexport class TransparentEncrypt implements IEncrypt {\n    encrypt(data: string): string {\n        return data;\n    }\n    decrypt(data: string): string {\n        return data;\n    }\n    hash(data: string): string {\n        return data;\n    }\n}\n","import { useFonts } from 'expo-font';\nimport { useEffect, useState } from 'react';\nimport { Dimensions, StatusBar, View, Platform } from 'react-native';\nimport { ControlsBar } from './src/components/ControlsBar';\nimport { AchievementsScene } from './src/scenes/Achievements';\nimport { PlayScene } from './src/scenes/Play';\nimport { EventsFactory } from './src/services/EventsFactory';\nimport { Game } from './src/services/Game';\nimport { SystemClock } from './src/utils/clock/SystemClock';\nimport { IAppStorage } from './src/utils/storage/AppStorageInterface';\nimport { DeviceStorage } from './src/utils/storage/DeviceStorage';\nimport { DefaultEncrypt } from './src/utils/storage/Encryption/Default';\nimport { IEncrypt } from './src/utils/storage/Encryption/IEncrypt';\nimport { TransparentEncrypt } from './src/utils/storage/Encryption/Transparent';\n\nexport default function App() {\n    StatusBar.setHidden(true);\n    const screen = Dimensions.get('window');\n    const [ready, setReady] = useState(false);\n    const [showAchievements, setShowAchievements] = useState(false);\n    const [fontsLoaded] = useFonts({\n        PrimaryExtraLight: require('./assets/fonts/NotoSans/NotoSans-ExtraLight.ttf'),\n        PrimaryLight: require('./assets/fonts/NotoSans/NotoSans-Light.ttf'),\n        Primary: require('./assets/fonts/NotoSans/NotoSans-Medium.ttf'),\n    });\n\n    useEffect(() => {\n        new DeviceStorage(new TransparentEncrypt())\n            .get('DEBUG')\n            .then((value) => {\n                if (value === '1') {\n                    Game.enableDebug();\n                }\n            });\n\n        const clock = new SystemClock();\n        let storage: IAppStorage = new DeviceStorage(new TransparentEncrypt());\n        if (Platform.OS === 'web') {\n            storage = new DeviceStorage(new DefaultEncrypt());\n        }\n\n        EventsFactory.init(clock);\n        Game.init(storage, clock)\n            .then(() => {\n                setReady(true);\n            })\n            .catch((e) => console.error('Could not initialize game', e));\n    }, []);\n\n    return (\n        <View\n            style={{\n                height: screen.height,\n                width: screen.width,\n                paddingTop: 100,\n            }}\n        >\n            {ready && fontsLoaded && (\n                <>\n                    <PlayScene />\n                    <ControlsBar\n                        showAchievements={() => {\n                            setShowAchievements(true);\n                        }}\n                    />\n                    {showAchievements && (\n                        <AchievementsScene\n                            onClose={() => {\n                                setShowAchievements(false);\n                            }}\n                        />\n                    )}\n                </>\n            )}\n        </View>\n    );\n}\n","module.exports = __webpack_public_path__ + \"static/media/button-press.34c1e086.mp3\";","module.exports = __webpack_public_path__ + \"static/media/button-penalty.a7d1e638.mp3\";","module.exports = __webpack_public_path__ + \"./fonts/NotoSans-ExtraLight.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/NotoSans-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/NotoSans-Medium.ttf\";"],"sourceRoot":""}